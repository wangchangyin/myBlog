(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{495:function(e,s,a){"use strict";a.r(s);var t=a(8),n=Object(t.a)({},(function(){var e=this,s=e.$createElement,a=e._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"oracle函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#oracle函数"}},[e._v("#")]),e._v(" Oracle函数")]),e._v(" "),a("p",[e._v("* Oracle 函数分为单行函数和多行函数两大类")]),e._v(" "),a("p",[e._v("* 单行函数")]),e._v(" "),a("p",[e._v("- 操作数据项")]),e._v(" "),a("p",[e._v("- 接受参数并返回处理结果")]),e._v(" "),a("p",[e._v("- 对每一返回行起作用")]),e._v(" "),a("p",[e._v("- 可修改数据类型")]),e._v(" "),a("p",[e._v("- 可嵌套使用")]),e._v(" "),a("p",[e._v("* 单行函数分类")]),e._v(" "),a("p",[e._v("- 字符函数")]),e._v(" "),a("p",[e._v("- 数值函数")]),e._v(" "),a("p",[e._v("- 日期函数")]),e._v(" "),a("p",[e._v("- 转换函数")]),e._v(" "),a("p",[e._v("- 通用函数")]),e._v(" "),a("h2",{attrs:{id:"字符函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符函数"}},[e._v("#")]),e._v(" "),a("strong",[e._v("字符函数")])]),e._v(" "),a("p",[e._v("* 字符大小写转换函数")]),e._v(" "),a("p",[e._v("* 函数  功能  用法   返回结果")]),e._v(" "),a("p",[e._v("- lower()  转换为小写 lower('John Smith') john smith")]),e._v(" "),a("p",[e._v("- upper()  转换为大写 upper('John Smith') JOHN SMITH")]),e._v(" "),a("p",[e._v("- initcap() 单词首字母大写 initcap('JOHN smith') John Smith")]),e._v(" "),a("p",[e._v("* 例:")]),e._v(" "),a("p",[e._v("- select lower('John Smith') from dual;->(john smith)")]),e._v(" "),a("p",[e._v("- select upper('John Smith') from dual;->(JOHN SMITH)")]),e._v(" "),a("p",[e._v("- select initcap('JOHN smith') from dual;->(John Smith)")]),e._v(" "),a("p",[e._v("*字符处理函数")]),e._v(" "),a("p",[e._v("* 函数  功能  用法   返回结果")]),e._v(" "),a("p",[e._v("- concat() 字符串连接 concat('Hello', 'World') Hello World")]),e._v(" "),a("p",[e._v("- substr() 截取子串 substr('HelloWorld', 4, 3) loW")]),e._v(" "),a("p",[e._v("- length() 返回字符串长度 length('Hello World')  11")]),e._v(" "),a("p",[e._v("- instr()  定位子串 instr('Hello World', 'or') 8")]),e._v(" "),a("p",[e._v("- lpad()  左侧填充 lpad('Smith', 10, '*')  *****Smith")]),e._v(" "),a("p",[e._v("- rpad()  右侧填充 rpad('Smith', 10, '*')  Smith*****")]),e._v(" "),a("p",[e._v("- trim()  过滤首尾空格 trim(' Mr Smith ')  Mr Smith")]),e._v(" "),a("p",[e._v("- replace() 替换  replace('ABA', 'A', 'C') CBC")]),e._v(" "),a("p",[e._v("* 注意:函数可嵌套使用")]),e._v(" "),a("p",[e._v("* 例:")]),e._v(" "),a("p",[e._v("- select concat('Hello', 'World')   from dual;->(HelloWorld)")]),e._v(" "),a("p",[e._v("- select concat(concat(ename, ' is a '), job) info from emp where empno=7369;->(SMITH is a CLERK)")]),e._v(" "),a("p",[e._v("- select substr('HelloWorld', 4, 3)   from dual;->(loW)")]),e._v(" "),a("p",[e._v("- select substr(substr('HelloWorld', 3, 6), 3, 3) from dual->(oWo)")]),e._v(" "),a("p",[e._v("- select length('Hello World')   from dual;->(11)")]),e._v(" "),a("p",[e._v("- select instr('Hello World', 'or')   from dual;->(8)")]),e._v(" "),a("p",[e._v("- select lpad('Smith', 10, '*')   from dual;->(*****Smith)")]),e._v(" "),a("p",[e._v("- select rpad('Smith', 10, '*')   from dual;->(Smith*****)")]),e._v(" "),a("p",[e._v("- select trim(' Mr Smith ')   from dual;->(Mr Smith)")]),e._v(" "),a("p",[e._v("- select replace('ABA', 'A', 'C')   from dual;->(CBC)")]),e._v(" "),a("h2",{attrs:{id:"数值函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数值函数"}},[e._v("#")]),e._v(" "),a("strong",[e._v("数值函数")])]),e._v(" "),a("p",[e._v("* 函数  功能  用法   返回结果")]),e._v(" "),a("p",[e._v("- abs()  取绝对值 abs(-3.14)  3.14")]),e._v(" "),a("p",[e._v("- round()  四舍五入 round(3.1415)  3")]),e._v(" "),a("p",[e._v("round(3.1415, 3) 3.142")]),e._v(" "),a("p",[e._v("round(314.1592, -2) 300")]),e._v(" "),a("p",[e._v("- trunc()  截断  trunc(3.1415, 3) 3.141")]),e._v(" "),a("p",[e._v("- ceil()  向上取整 ceil(3.14)  4")]),e._v(" "),a("p",[e._v("- floor()  向下取整 floor(3.14)  3")]),e._v(" "),a("p",[e._v("- sign()  判断数值正负 sign(-3.14)  -1")]),e._v(" "),a("p",[e._v("- sin()..  三角函数.. sin(3.14)  .001592653")]),e._v(" "),a("p",[e._v("- power()  幂运算  power(4.5, 2)  20.25")]),e._v(" "),a("p",[e._v("- sqrt()  开平方根 sqrt(9)   3")]),e._v(" "),a("p",[e._v("- mod()  取模  mod(10, 3)  1")]),e._v(" "),a("p",[e._v("- exp()  基数为e的幂运算exp(1)   2.71828183")]),e._v(" "),a("p",[e._v("- log()  对数运算 log(4, 16.0)  2")]),e._v(" "),a("p",[e._v("- ln()  自然对数运算 ln(7)   1.94591015")]),e._v(" "),a("p",[e._v("* 例:")]),e._v(" "),a("p",[e._v("- select abs(-3.14)  from dual;->(3.14)")]),e._v(" "),a("p",[e._v("- select round(3.1415)  from dual;->(3)")]),e._v(" "),a("p",[e._v("- select round(3.1415, 3) from dual;->(3.142)")]),e._v(" "),a("p",[e._v("- select round(314.1592, -2) from dual;->(300)")]),e._v(" "),a("p",[e._v("- select trunc(3.1415, 3) from dual;->(3.141)")]),e._v(" "),a("p",[e._v("- select trunc(3.1415, -3) from dual;->(0)")]),e._v(" "),a("p",[e._v("- select trunc(3.1415, 7) from dual;->(3.1415)")]),e._v(" "),a("p",[e._v("- select ceil(3.14)  from dual;->(4)")]),e._v(" "),a("p",[e._v("- select floor(3.14)  from dual;->(3)")]),e._v(" "),a("p",[e._v("- select sign(-3.14)  from dual;->(-1)")]),e._v(" "),a("p",[e._v("- select sin(3.14)  from dual;->(.001592653)")]),e._v(" "),a("p",[e._v("- select power(4.5, 2)  from dual;->(20.25)")]),e._v(" "),a("p",[e._v("- select sqrt(9)  from dual;->(3)")]),e._v(" "),a("p",[e._v("- select mod(10, 3)  from dual;->(1)")]),e._v(" "),a("p",[e._v("- select exp(1)   from dual;->(2.71828183)")]),e._v(" "),a("p",[e._v("- select log(4, 16.0)  from dual;->(2)")]),e._v(" "),a("p",[e._v("- select ln(7)   from dual;->(1.94591015)")]),e._v(" "),a("h2",{attrs:{id:"日期类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#日期类型"}},[e._v("#")]),e._v(" "),a("strong",[e._v("日期类型")])]),e._v(" "),a("p",[e._v("* 关于日期类型")]),e._v(" "),a("p",[e._v("- Oracle内部以数字格式存储日期和时间信息:世纪,年,月,日,小时,分钟,秒")]),e._v(" "),a("p",[e._v("- 缺省的日期格式是DD-MON-YY")]),e._v(" "),a("p",[e._v("- 可使用sysdate函数获取当前系统日期和时间")]),e._v(" "),a("p",[e._v("* 日期型数据的算术运算")]),e._v(" "),a("p",[e._v("- 日期型数据可以直接加或减一个数值,结果仍为日期")]),e._v(" "),a("p",[e._v("- 两个日期型数据可以相减,结果为二者相差多少天")]),e._v(" "),a("p",[e._v("* 查询200-12-25减1991-12-25一共有多少天")]),e._v(" "),a("p",[e._v("- select to_date('25-12月 -09') - to_date('25-12月-1991') from dual;")]),e._v(" "),a("h2",{attrs:{id:"日期函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#日期函数"}},[e._v("#")]),e._v(" "),a("strong",[e._v("日期函数")])]),e._v(" "),a("p",[e._v("* 函数   功能    用法   返回结果")]),e._v(" "),a("p",[e._v("- add_months(x, y) 计算在日期x基础上增加y个月后的日期add_months(sysdate, 2)")]),e._v(" "),a("p",[e._v("- last_day(x)  返回日期x当月最后一天的日期  last_day(sysdate)")]),e._v(" "),a("p",[e._v("- months_between(x, y) 返回日期x和y之间相差的月数  months_between(sysdate, hiredate)")]),e._v(" "),a("p",[e._v("- round(x, y)  将日期x四舍五入到y所指定的  round(sysdate, 'month')")]),e._v(" "),a("p",[e._v("日期单位(月或年)的第一天  round(sysdate, 'year')")]),e._v(" "),a("p",[e._v("- trunc(x, y)  将日期x截断到y所指定的   trunc(sysdate, 'month')")]),e._v(" "),a("p",[e._v("日期单位(月或年)的第一天  trunc(sysdate, 'year')")]),e._v(" "),a("p",[e._v("- next_day  计算指定日期x后的第一个星期几  next_day(sysdate, '星期二')")]),e._v(" "),a("p",[e._v("(由参数y指定)对应的日期")]),e._v(" "),a("p",[e._v("* 例:")]),e._v(" "),a("p",[e._v("- select add_months(sysdate, 2)    from dual;->(05-10月-09)")]),e._v(" "),a("p",[e._v("- select last_day(sysdate)    from dual;->(31-8月-09)")]),e._v(" "),a("p",[e._v("- select hiredate, months_between(sysdate, hiredate)  from emp;")]),e._v(" "),a("p",[e._v("- select months_between(sysdate, '17-12月-80')   from dual;->(343.63907)")]),e._v(" "),a("p",[e._v("- select round(sysdate, 'month')   from dual;->(01-8月-09)")]),e._v(" "),a("p",[e._v("- select round(to_date('16-8月 -09'), 'month')   from dual;->(01-9月-09)")]),e._v(" "),a("p",[e._v("- select round(sysdate, 'year')    from dual;->(01-1月-10)")]),e._v(" "),a("p",[e._v("- select round(to_date('1-7月 -09'), 'year')   from dual;->(01-1月-10)")]),e._v(" "),a("p",[e._v("- select round(to_date('25-6月 -09'), 'year')   from dual;->(01-9月-09)")]),e._v(" "),a("p",[e._v("- select trunc(sysdate, 'month')   from dual;->(01-8月-09)")]),e._v(" "),a("p",[e._v("- select trunc(sysdate, 'year')    from dual;->(01-1月-09)")]),e._v(" "),a("p",[e._v("- select next_day(sysdate, '星期二')    from dual;->(11-8月-09)")]),e._v(" "),a("p",[e._v("- select next_day(next_day(sysdate, '星期二'), '星期二') from dual;->(18-8月-09)")]),e._v(" "),a("h2",{attrs:{id:"转换函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#转换函数"}},[e._v("#")]),e._v(" "),a("strong",[e._v("转换函数")])]),e._v(" "),a("p",[e._v("* 数据类型转换包括隐含转换和显式转换两方式,建议使用显式的数据类型转换,确保SQL语句的可靠性")]),e._v(" "),a("p",[e._v("* 字符类型 ->数值类型 -> to_number()")]),e._v(" "),a("p",[e._v("* 字符类型 ->日期类型 -> to_date()")]),e._v(" "),a("p",[e._v("* 数值类型 ->字符类型 -> to_char()")]),e._v(" "),a("p",[e._v("* 日期类型 ->字符类型 -> to_char()")]),e._v(" "),a("h2",{attrs:{id:"日期-字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#日期-字符串"}},[e._v("#")]),e._v(" "),a("strong",[e._v("日期 *"),a("em",[e._v("->*")]),e._v(" *"),a("em",[e._v("字符串*")])])]),e._v(" "),a("p",[e._v("* to_char()函数可以将日期型数值转换为字符串形式")]),e._v(" "),a("p",[e._v("* 格式:")]),e._v(" "),a("p",[e._v("- to_char(date)   // 缺省转换为'dd-mm-yy'格式")]),e._v(" "),a("p",[e._v("- to_char(date, 'format_model')  // 转换为模式串指定的格式")]),e._v(" "),a("p",[e._v("* 例:")]),e._v(" "),a("p",[e._v("- select empno, ename, sal, to_char(hiredate, 'yyyy-mm-dd') from emp;")]),e._v(" "),a("p",[e._v("- select to_char(sysdate, 'yyyy-mm-dd hh:mi:ss') from dual;")]),e._v(" "),a("p",[e._v("- select to_char(sysdate, 'yyyy-mm-dd hh24:mi:ss') from dual;")]),e._v(" "),a("h2",{attrs:{id:"常用日期格式符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用日期格式符"}},[e._v("#")]),e._v(" "),a("strong",[e._v("常用日期格式符")])]),e._v(" "),a("p",[e._v("* 格式符  说明   举列")]),e._v(" "),a("p",[e._v("- yyyy  年份   2008")]),e._v(" "),a("p",[e._v("- mm  用数字显示月份  02")]),e._v(" "),a("p",[e._v("- dd  在当月中是第几天 28")]),e._v(" "),a("p",[e._v("- day  星期几   星期五")]),e._v(" "),a("p",[e._v("- am/pm  显示上午/下午  上午")]),e._v(" "),a("p",[e._v("- hh/hh12/hh24 小时   2:30 14:30")]),e._v(" "),a("p",[e._v("- mi  分钟   30")]),e._v(" "),a("p",[e._v("- ss  秒钟   46")]),e._v(" "),a("p",[e._v("* 说明:除上述格式符外,日期模式串中还可直接出现如下字符( - : ; / );")]),e._v(" "),a("p",[e._v('* 如要显示其它文本字符串则需使用双引号括起来;也可在械串的开头使用"fm"标')]),e._v(" "),a("p",[e._v("* 记以去掉数字前面的零")]),e._v(" "),a("p",[e._v("* 例:")]),e._v(" "),a("p",[e._v('- select to_char(sysdate, \'yyyy"年"mm"月"dd"日" day hh24:mi:ss\') from dual;')]),e._v(" "),a("p",[e._v('- select to_char(sysdate, \'fmyyyy"年"mm"月"dd"日" day hh24:mi:ss\') from dual;')]),e._v(" "),a("h2",{attrs:{id:"字符串-日期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串-日期"}},[e._v("#")]),e._v(" "),a("strong",[e._v("字符串 *"),a("em",[e._v("->*")]),e._v(" *"),a("em",[e._v("日期*")])])]),e._v(" "),a("p",[e._v("* to_date()函数可以将字符串转换为日期型数值形式")]),e._v(" "),a("p",[e._v("* 格式:")]),e._v(" "),a("p",[e._v("- to_date(char)   // 按缺省格式'dd-mm-yy'进行解析")]),e._v(" "),a("p",[e._v("- to_date(char, 'format_model')  // 按模式串指定的格式进行解析")]),e._v(" "),a("p",[e._v("* 例:")]),e._v(" "),a("p",[e._v("- insert into t5 values('BOBO', to_date('2008-02-28', 'yyyy-mm-dd'));")]),e._v(" "),a("p",[e._v("- select to_date(to_char(sysdate, 'yyyy-mm-dd hh24:mi:ss'), 'yyyy-mm-dd hh24:mi:ss') from dual;")]),e._v(" "),a("p",[e._v("- select to_char(to_date(to_char(sysdate, 'yyyy-mm-dd hh24:mi:ss'), 'yyyy-mm-dd hh24:mi:ss'), 'dd/mm/yyyy') from dual;")]),e._v(" "),a("h2",{attrs:{id:"数字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数字"}},[e._v("#")]),e._v(" "),a("strong",[e._v("数字")])]),e._v(" "),a("p",[e._v("* to_char()函数可以将数字值转换为字符串形式")]),e._v(" "),a("p",[e._v("* 格式:")]),e._v(" "),a("p",[e._v("- to_char(number)")]),e._v(" "),a("p",[e._v("- to_char(number, 'format_model')")]),e._v(" "),a("p",[e._v("* 例:")]),e._v(" "),a("p",[e._v("- select to_char(12345.678901) from dual;")]),e._v(" "),a("p",[e._v("- select to_char(12345.678901, '$99,999.0000') from dual;")]),e._v(" "),a("p",[e._v("* 数字模式符:")]),e._v(" "),a("p",[e._v("* 格式符 说 明")]),e._v(" "),a("p",[e._v("- 9 代表一位数字")]),e._v(" "),a("p",[e._v("- 0 代表一位数字,强制显示0")]),e._v(" "),a("p",[e._v("- $ 放置一个美圆符$")]),e._v(" "),a("p",[e._v("- L 放置一个本地货币符")]),e._v(" "),a("p",[e._v("- . 小数点")]),e._v(" "),a("p",[e._v("- , 千位指示符")]),e._v(" "),a("p",[e._v("* 例:")]),e._v(" "),a("p",[e._v("- select to_char(12345.6, 'L999,999.0000') from dual;")]),e._v(" "),a("h2",{attrs:{id:"字符串-数字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串-数字"}},[e._v("#")]),e._v(" "),a("strong",[e._v("字符串 *"),a("em",[e._v("->*")]),e._v(" *"),a("em",[e._v("数字*")])])]),e._v(" "),a("p",[e._v("* to_number()函数可以将字符串转换为数字值形式")]),e._v(" "),a("p",[e._v("* 格式:")]),e._v(" "),a("p",[e._v("- to_number(char)")]),e._v(" "),a("p",[e._v("- to_number(char, 'format_model')")]),e._v(" "),a("p",[e._v("* 例:")]),e._v(" "),a("p",[e._v("- select to_number('12345.678901') from dual;")]),e._v(" "),a("p",[e._v("- select to_number('$12,345.6789', '$99,999.0000') from dual;")]),e._v(" "),a("p",[a("strong",[e._v("2）如果数字在格式范围内的话，就是正确的，否则就是错误的；如：")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("$12345.678小数点位数必须小于等于后面规定的格式\nselect to_number('$12345.678', '$999999.99') from dual;  X\nselect to_number('$12345.678', '$999999.999') from dual; √\nselect to_number('$12345.67', '$999999.999') from dual;  √\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])]),a("h2",{attrs:{id:"通用函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通用函数"}},[e._v("#")]),e._v(" "),a("strong",[e._v("通用函数")])]),e._v(" "),a("p",[e._v("* 通用函数适用于任何类型数据(包括空值):")]),e._v(" "),a("p",[e._v("- nvl()")]),e._v(" "),a("p",[e._v("- nvl2()")]),e._v(" "),a("p",[e._v("- nullif()")]),e._v(" "),a("p",[e._v("- coalesce()")]),e._v(" "),a("p",[e._v("- case表达式")]),e._v(" "),a("p",[e._v("- decode()")]),e._v(" "),a("h2",{attrs:{id:"nvl-函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nvl-函数"}},[e._v("#")]),e._v(" "),a("strong",[e._v("NVL()*"),a("em",[e._v("函数*")])])]),e._v(" "),a("p",[e._v("* NVL()函数用于将空值null替换为指定的缺省值,适用于字符,数字,日期等类型数据")]),e._v(" "),a("p",[e._v("* 语法格式:")]),e._v(" "),a("p",[e._v("- NVL(exp1, exp2)")]),e._v(" "),a("p",[e._v("* 说明:")]),e._v(" "),a("p",[e._v("- 如果表达式exp1的值为null,则返回exp2的值,否则返回exp1的值")]),e._v(" "),a("p",[e._v("* 用法举例:")]),e._v(" "),a("p",[e._v("- select empno, ename, sal, comm, sal+nvl(comm, 0) from emp;")]),e._v(" "),a("p",[e._v("- select empno, ename, hiredate, nvl(hiredate, sysdate) from emp;")]),e._v(" "),a("p",[e._v("- select empno, ename, job, nvl(job, 'NO job yet') from emp;")]),e._v(" "),a("h2",{attrs:{id:"nvl2-函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nvl2-函数"}},[e._v("#")]),e._v(" "),a("strong",[e._v("NVL2()*"),a("em",[e._v("函数*")])])]),e._v(" "),a("p",[e._v("* NVL2()函数用于实现条件表达式功能")]),e._v(" "),a("p",[e._v("* 语法格式:")]),e._v(" "),a("p",[e._v("- NVL2(exp1, exp2, exp3)")]),e._v(" "),a("p",[e._v("* 说明:")]),e._v(" "),a("p",[e._v("- 如果表达式exp1的值不为null,则返回exp2的值,否则返回exp3的值")]),e._v(" "),a("p",[e._v("* 用法举例:")]),e._v(" "),a("p",[e._v("- select empno, ename, sal, comm, nvl2(comm, sal+comm, sal) from emp;")]),e._v(" "),a("h2",{attrs:{id:"nullif-函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nullif-函数"}},[e._v("#")]),e._v(" "),a("strong",[e._v("NULLIF()*"),a("em",[e._v("函数*")])])]),e._v(" "),a("p",[e._v("* NULLIF()函数用于数据等价性比较并根据比较结果返回null或其中一个被比较的数值")]),e._v(" "),a("p",[e._v("* 语法格式:")]),e._v(" "),a("p",[e._v("- NULLIF(exp1, exp2)")]),e._v(" "),a("p",[e._v("* 说明:")]),e._v(" "),a("p",[e._v("- 如果表达式exp1与exp2的值相等返回null,否则返回exp1的值")]),e._v(" "),a("p",[e._v("* 用法举例:")]),e._v(" "),a("p",[e._v("- select name 原名, nullif(pen_name, name)化名 from author;")]),e._v(" "),a("h2",{attrs:{id:"coalesce-函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#coalesce-函数"}},[e._v("#")]),e._v(" "),a("strong",[e._v("COALESCE()*"),a("em",[e._v("函数*")])])]),e._v(" "),a("p",[e._v('* COALESCE()函数用于实现数据"接合"功能')]),e._v(" "),a("p",[e._v("* 语法格式:")]),e._v(" "),a("p",[e._v("- COALESCE(exp1, exp2, ...)")]),e._v(" "),a("p",[e._v("* 说明:")]),e._v(" "),a("p",[e._v("- 依次考察各参数表达式,遇到非null值即停止并返回该值")]),e._v(" "),a("p",[e._v("* 用法举例:")]),e._v(" "),a("p",[e._v("- select empno, ename, sal, comm, coalesce(sal+comm, sal, 0) 总收入 from emp;")]),e._v(" "),a("h2",{attrs:{id:"case-函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#case-函数"}},[e._v("#")]),e._v(" "),a("strong",[e._v("CASE()*"),a("em",[e._v("函数*")])])]),e._v(" "),a("p",[e._v("* CASE()表达式用于实现多路分支结构")]),e._v(" "),a("p",[e._v("* 语法格式:")]),e._v(" "),a("p",[e._v("- CASE exp1 when comparison_exp1 then return_exp1")]),e._v(" "),a("p",[e._v("-      [when comparison_exp2 then return_exp2")]),e._v(" "),a("p",[e._v("-      when comparison_expn then return_expn")]),e._v(" "),a("p",[e._v("-      else esle_exp]")]),e._v(" "),a("p",[e._v("- end [TempName]")]),e._v(" "),a("p",[e._v("* 说明:")]),e._v(" "),a("p",[e._v("- 如果 exp1是 comparison_exp1的时候,就返回return_exp1")]),e._v(" "),a("p",[e._v("-       [ comparison_exp2 的时候,就返回return_exp2")]),e._v(" "),a("p",[e._v("-        comparison_expn 的时候,就返回return_expn")]),e._v(" "),a("p",[e._v("-        else 就返回 esle_exp ]")]),e._v(" "),a("p",[e._v("- end [别名]")]),e._v(" "),a("p",[e._v("* 用法举例:")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("- select empno, ename, sal,\n\n\\-     case deptno when 10 then '财务部'\n\n\\-           when 20 then '研发部'\n\n\\-           when 30 then '销售部'\n\n\\-           else '未知部门'\n\n\\-     end 部门\n\n\\- from emp;\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br")])]),a("p",[a("strong",[e._v("通配符：")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("select \nJOB_ID,\n  case  when JOB_ID like '%AD%' then 'AD'\n    when JOB_ID like 'IT_PROG' then 'IT'\n    when JOB_ID like '%FI%' then 'FI' \n    else 'No'\n  end 部门简称\nfrom employees\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br")])]),a("h3",{attrs:{id:"case高阶用法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#case高阶用法"}},[e._v("#")]),e._v(" case高阶用法：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("--case语句的种类:\n1.简单case语句\n语法:\n   case exp when comexp then returnvalue\n            ...\n            when comexp then returnvalue\n            else returnvalue\n    end\n      \n  case到end之间相当于一个具体的值，可以做运算，取别名，嵌套case 等等。\n  只要把case到end当作一个运算结果的表达式就可以了。\n\n举例:\n   select cust_last_name,\n          case credit_limit when 100 then 'low'\n                            when 5000 then 'high'\n                            else 'medium'\n          end\n     from customers;\n     \n2.搜索case语句\n语法:\n    case when boolean then return value\n         ...\n         when boolean then return value\n         else retur nvalue\n     end\n     \n举例:\nselect case when id between 1 and 10 then 'low'\n            when id between 20 and 30 then 'mid'\n            when id between 40 and 50 then 'high'\n            else 'unknow'\n       end\nfrom product;\n\n--简单case和搜索case之间的区别：\n1. 简单case只能是when后面的表达式完全匹配case后的表达式，相当于 =，所以也不能匹配null。\n2. searched case可以作为比较条件，那么可以使用like、!=、between ..and、<、=、is null、is not null等，比简单case的使用更加广泛，完全可以替代简单case。\n\n--注意事项:\n1.case 表达式返回的是一个确定的value，若前面的都不匹配，则返回else中的项.\n2.简单case 中的表达式，when 后面的表达式类型应该全部保持一致.\n3.所有的then 后面的return_value类型要保持一致.\n4.对于简单case 表达式，也就是case 表达式 when…那么when null 总是取不到。也就是case 后面的表达式如果值为null，不会与when null 匹配，只会与else匹配.\n5.对于searched case来说，有自动类型转换，只要条件成立就可以。\n如:select case when 1='1' then 1 end from dual; 其中1='1'条件成立\n\n值得一提的是: sql中的case语句与pl/sql中的case语句的不同之处:\n前者的else不是必须的，如果没有匹配就返回null;后者的else不写，则报case_not_found异常.\n\n--case中嵌套子查询\nCase语句中可以使用子查询，但是必须返回一行，不可以是多行.\n如：\nselect case (select count(*) as s1 from t1 where a = 1)\n           when (select count(*) as s2 from t1, t2 where t1.a = t2.a and t2.a = 1) then '相等'\n           else '不相等'\n       end\n  from dual;\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br"),a("span",{staticClass:"line-number"},[e._v("16")]),a("br"),a("span",{staticClass:"line-number"},[e._v("17")]),a("br"),a("span",{staticClass:"line-number"},[e._v("18")]),a("br"),a("span",{staticClass:"line-number"},[e._v("19")]),a("br"),a("span",{staticClass:"line-number"},[e._v("20")]),a("br"),a("span",{staticClass:"line-number"},[e._v("21")]),a("br"),a("span",{staticClass:"line-number"},[e._v("22")]),a("br"),a("span",{staticClass:"line-number"},[e._v("23")]),a("br"),a("span",{staticClass:"line-number"},[e._v("24")]),a("br"),a("span",{staticClass:"line-number"},[e._v("25")]),a("br"),a("span",{staticClass:"line-number"},[e._v("26")]),a("br"),a("span",{staticClass:"line-number"},[e._v("27")]),a("br"),a("span",{staticClass:"line-number"},[e._v("28")]),a("br"),a("span",{staticClass:"line-number"},[e._v("29")]),a("br"),a("span",{staticClass:"line-number"},[e._v("30")]),a("br"),a("span",{staticClass:"line-number"},[e._v("31")]),a("br"),a("span",{staticClass:"line-number"},[e._v("32")]),a("br"),a("span",{staticClass:"line-number"},[e._v("33")]),a("br"),a("span",{staticClass:"line-number"},[e._v("34")]),a("br"),a("span",{staticClass:"line-number"},[e._v("35")]),a("br"),a("span",{staticClass:"line-number"},[e._v("36")]),a("br"),a("span",{staticClass:"line-number"},[e._v("37")]),a("br"),a("span",{staticClass:"line-number"},[e._v("38")]),a("br"),a("span",{staticClass:"line-number"},[e._v("39")]),a("br"),a("span",{staticClass:"line-number"},[e._v("40")]),a("br"),a("span",{staticClass:"line-number"},[e._v("41")]),a("br"),a("span",{staticClass:"line-number"},[e._v("42")]),a("br"),a("span",{staticClass:"line-number"},[e._v("43")]),a("br"),a("span",{staticClass:"line-number"},[e._v("44")]),a("br"),a("span",{staticClass:"line-number"},[e._v("45")]),a("br"),a("span",{staticClass:"line-number"},[e._v("46")]),a("br"),a("span",{staticClass:"line-number"},[e._v("47")]),a("br"),a("span",{staticClass:"line-number"},[e._v("48")]),a("br"),a("span",{staticClass:"line-number"},[e._v("49")]),a("br"),a("span",{staticClass:"line-number"},[e._v("50")]),a("br"),a("span",{staticClass:"line-number"},[e._v("51")]),a("br"),a("span",{staticClass:"line-number"},[e._v("52")]),a("br"),a("span",{staticClass:"line-number"},[e._v("53")]),a("br"),a("span",{staticClass:"line-number"},[e._v("54")]),a("br"),a("span",{staticClass:"line-number"},[e._v("55")]),a("br"),a("span",{staticClass:"line-number"},[e._v("56")]),a("br"),a("span",{staticClass:"line-number"},[e._v("57")]),a("br"),a("span",{staticClass:"line-number"},[e._v("58")]),a("br"),a("span",{staticClass:"line-number"},[e._v("59")]),a("br")])]),a("h2",{attrs:{id:"decode-函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#decode-函数"}},[e._v("#")]),e._v(" "),a("strong",[e._v("DECODE()*"),a("em",[e._v("函数*")])])]),e._v(" "),a("p",[e._v("* 和CASE()表达式类似,DECODE()函数也用于实现多路分支结构")]),e._v(" "),a("p",[e._v("* 语法格式:")]),e._v(" "),a("p",[e._v("- decode(col|expression, search1, result1")]),e._v(" "),a("p",[e._v("-           [, search2, result2, ...,]")]),e._v(" "),a("p",[e._v("-           [, default])")]),e._v(" "),a("p",[e._v("* 说明:")]),e._v(" "),a("p",[e._v("- 如果 col|expression是 search1的时候,就返回result1")]),e._v(" "),a("p",[e._v("-            [ search2 的时候,就返回result2, ...]")]),e._v(" "),a("p",[e._v("-            [, default])")]),e._v(" "),a("p",[e._v("- [别名]")]),e._v(" "),a("p",[e._v("* 用法举例:")]),e._v(" "),a("p",[e._v("- select empno, ename, sal,")]),e._v(" "),a("p",[e._v("-     decode(deptno, 10, '财务部',")]),e._v(" "),a("p",[e._v("-            20, '研发部',")]),e._v(" "),a("p",[e._v("-            30, '销售部',")]),e._v(" "),a("p",[e._v("-           '未知部门')")]),e._v(" "),a("p",[e._v("-     部门")]),e._v(" "),a("p",[e._v("- from emp;")]),e._v(" "),a("h2",{attrs:{id:"函数嵌套"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数嵌套"}},[e._v("#")]),e._v(" "),a("strong",[e._v("函数嵌套")])]),e._v(" "),a("p",[e._v("* 单行孙数可以嵌套使用,嵌套层次无限制")]),e._v(" "),a("p",[e._v("* 嵌套函数的执行顺序是由内到外")]),e._v(" "),a("p",[e._v("- select empno, lpad(initcap(trim(ename)), 10, '*') name, job, sal from emp;")]),e._v(" "),a("p",[e._v("##########[ 单行函数小结 ]##########")]),e._v(" "),a("p",[e._v("* 使用系统提供的单行函数可实现如下功能:")]),e._v(" "),a("p",[e._v("- 对数据进行计算")]),e._v(" "),a("p",[e._v("- 控制数据的输出格式")]),e._v(" "),a("p",[e._v("- 设置/改变日期的显示格式")]),e._v(" "),a("p",[e._v("- 进行数据类型转换")]),e._v(" "),a("p",[e._v("- 使用NVL函数处理空值")]),e._v(" "),a("p",[e._v("- 实现IF-THEN-ELSE多路分支逻辑")]),e._v(" "),a("h1",{attrs:{id:"分组函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分组函数"}},[e._v("#")]),e._v(" "),a("strong",[e._v("分组函数")])]),e._v(" "),a("p",[e._v("* 分组函数对一组数据进行运算,针对一组数据(多行记录)只返回一个结果,也称多行函数")]),e._v(" "),a("p",[e._v("* 常用分组函数")]),e._v(" "),a("p",[e._v("- 函数  功能说明   适用类型")]),e._v(" "),a("p",[e._v("- avg()  计算平均值   数值型")]),e._v(" "),a("p",[e._v("- count()  返回查询所行到的记录行数 任何类型数据")]),e._v(" "),a("p",[e._v("- max()  计算最大值   任何类型数据")]),e._v(" "),a("p",[e._v("- min()  计算最小值   任何类型数据")]),e._v(" "),a("p",[e._v("- sun()  求和   数值型")]),e._v(" "),a("blockquote",[a("p",[e._v("1.上述函数除了count(*)会处理null，其他都会忽略null，可用nvl函数处理")]),e._v(" "),a("p",[e._v("2.备注:MIN,MAX可用于任何数据类型，便AVG， SUM，STDDEV,VARIANCE仅适用于数值型字段。")])]),e._v(" "),a("p",[e._v("* 举例:")]),e._v(" "),a("p",[e._v("- select avg(sal), max(sal), min(sal), sum(sal) from emp;")]),e._v(" "),a("p",[e._v("- select max(hiredate), min(hiredate) from emp;")]),e._v(" "),a("h2",{attrs:{id:"count-函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#count-函数"}},[e._v("#")]),e._v(" "),a("strong",[e._v("COUNT()*"),a("em",[e._v("函数*")])])]),e._v(" "),a("p",[e._v("* count(*) 返回组中总记录数目"),a("strong",[e._v("包括空行")])]),e._v(" "),a("p",[e._v("* count(exp) 返回表达式exp值"),a("strong",[e._v("非空")]),e._v("的记录数目")]),e._v(" "),a("p",[e._v("* count(distinct(exp)) 返回表达式exp值不重复的,"),a("strong",[e._v("非空")]),e._v("的记录数目")]),e._v(" "),a("p",[e._v("* 举例:")]),e._v(" "),a("p",[e._v("- select count(*) from emp;   ====      select count(*1) from emp;")]),e._v(" "),a("p",[e._v("- select count(comm) from emp;")]),e._v(" "),a("p",[e._v("- select count(distinct(deptno)) from emp;")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" select count(distinct(deptno)) from emp;\n 不用distinct，使用group by改为：\n select count(deptno) from (select deptno from emp group by deptno)\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])]),a("h2",{attrs:{id:"分组函数与空值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分组函数与空值"}},[e._v("#")]),e._v(" "),a("strong",[e._v("分组函数与空值")])]),e._v(" "),a("p",[e._v("* 分组函数省略列中的空值")]),e._v(" "),a("p",[e._v("- select avg(comm) from emp;")]),e._v(" "),a("p",[e._v("- select sum(comm) from emp;")]),e._v(" "),a("p",[e._v("* "),a("strong",[e._v("可使用NVL()函数强制分组函数处理空值")])]),e._v(" "),a("p",[e._v("- select avg(nvl(comm, 0)) from emp;")]),e._v(" "),a("h2",{attrs:{id:"group-by-子句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#group-by-子句"}},[e._v("#")]),e._v(" "),a("strong",[e._v("GROUP BY*"),a("em",[e._v("子句*")])])]),e._v(" "),a("p",[e._v("* GROUP BY 子句将表中数据分成若干小组")]),e._v(" "),a("p",[e._v("* 语法格式")]),e._v(" "),a("p",[e._v("- select column, group_function(column)")]),e._v(" "),a("p",[e._v("- from table")]),e._v(" "),a("p",[e._v("- [where condition]")]),e._v(" "),a("p",[e._v("- [group by group_by_expression]")]),e._v(" "),a("p",[e._v("- [order by column]")]),e._v(" "),a("p",[e._v("* 例:")]),e._v(" "),a("p",[e._v("- select deptno, avg(sal) from emp group by deptno;")]),e._v(" "),a("p",[e._v("- select deptno, avg(sal) from emp where deptno > 10 group by deptno;")]),e._v(" "),a("p",[e._v("- select deptno, avg(sal) from emp group by deptno order by deptno desc;")]),e._v(" "),a("p",[e._v("* 说明:")]),e._v(" "),a("blockquote",[a("p",[e._v("- 出现在SELECT列表中的字段,如果不是包含在组函数中,那么该字段必须同时在GROUP BY 子句中出现")]),e._v(" "),a("p",[e._v("- 包含在 GROUP BY子句中的字段则不必须出现在 SELECT列表中")]),e._v(" "),a("p",[e._v("- 可使用 where子句限定查询条件")]),e._v(" "),a("p",[e._v("- 可使用 order by子句指定排序方式")])]),e._v(" "),a("p",[e._v("* 注意:")]),e._v(" "),a("p",[e._v("- 执行顺序: where -> group by -> select ... from ... -> order by..")]),e._v(" "),a("p",[e._v("##########[ 基于多字段分组 ]##########")]),e._v(" "),a("p",[e._v("- select deptno, job, avg(sal) from emp group by deptno, job;")]),e._v(" "),a("p",[e._v("##########[ 组函数的错误用法 ]##########")]),e._v(" "),a("p",[e._v("* 如果没有 GROUP BY子句, SELECT列表中不允许出现字段(单行函数)与分组函数混用的情况")]),e._v(" "),a("p",[e._v("- select empno, sal from emp; -> (Y)")]),e._v(" "),a("p",[e._v("- select avg(sal) from emp; -> (Y)")]),e._v(" "),a("p",[e._v("- select empno, initcap(ename), avg(sal) from emp; -> (N)")]),e._v(" "),a("p",[e._v("* 不允许在 WHERE子句中使用分组函数")]),e._v(" "),a("p",[e._v("- select deptno, avg(sal)")]),e._v(" "),a("p",[e._v("- from emp")]),e._v(" "),a("p",[e._v("- where avg(sal) > 2000; -> (N)")]),e._v(" "),a("p",[e._v("- group by deptno;")]),e._v(" "),a("p",[e._v("- 注:这跟子句运行顺序有关,")]),e._v(" "),a("p",[e._v("-   where 最先执行,")]),e._v(" "),a("p",[e._v("-   在执行 where子句时,")]),e._v(" "),a("p",[e._v("-   还没有执行 group by子句,")]),e._v(" "),a("p",[e._v("-   还不知道什么分组,")]),e._v(" "),a("p",[e._v("-   也没计算过 avg(sal)组内的平均工资")]),e._v(" "),a("h2",{attrs:{id:"having-子句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#having-子句"}},[e._v("#")]),e._v(" "),a("strong",[e._v("HAVING *"),a("em",[e._v("子句*")])])]),e._v(" "),a("p",[e._v("* HAVING 子句用于过滤分组")]),e._v(" "),a("p",[e._v("* 语法格式")]),e._v(" "),a("p",[e._v("- select column, group_function(column)")]),e._v(" "),a("p",[e._v("- from table")]),e._v(" "),a("p",[e._v("- [where condition]")]),e._v(" "),a("p",[e._v("- [group by group_by_expression]")]),e._v(" "),a("p",[e._v("- [order by column];")]),e._v(" "),a("p",[e._v("* 例:")]),e._v(" "),a("p",[e._v("- select deptno, job, avg(sal)")]),e._v(" "),a("p",[e._v("- from emp")]),e._v(" "),a("p",[e._v("- where hiredate >= to_date('1981-05-01', 'yyyy-mm-dd')")]),e._v(" "),a("p",[e._v("- group by deptno, job")]),e._v(" "),a("p",[e._v("- having avg(sal) > 1200")]),e._v(" "),a("p",[e._v("- order by deptno, job;")]),e._v(" "),a("p",[e._v("##########[ 分组函数嵌套 ]##########")]),e._v(" "),a("p",[e._v("* 分组函数最多可嵌套两层")]),e._v(" "),a("p",[e._v("- select max(avg(sal))")]),e._v(" "),a("p",[e._v("- from emp")]),e._v(" "),a("p",[e._v("- group by deptno;")]),e._v(" "),a("h1",{attrs:{id:"oracle-表连接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#oracle-表连接"}},[e._v("#")]),e._v(" Oracle 表连接")]),e._v(" "),a("p",[e._v("* SQL/Oracle 使用表连接从多个表中查询数据")]),e._v(" "),a("p",[e._v("* 语法格式:")]),e._v(" "),a("p",[e._v("- select 字段列表")]),e._v(" "),a("p",[e._v("- from table1, table2")]),e._v(" "),a("p",[e._v("- where table1.column1 = table2.column2")]),e._v(" "),a("p",[e._v("* 说明:")]),e._v(" "),a("p",[e._v("- 在 where子句中指定连接条件")]),e._v(" "),a("p",[e._v('- 当被连接的多个表中存在同名字段时,必须在该字段前加上"表名."作为前缀')]),e._v(" "),a("p",[e._v("* 例:")]),e._v(" "),a("p",[e._v("- select empno, ename, job, emp.deptno, dname")]),e._v(" "),a("p",[e._v("- from emp, dept")]),e._v(" "),a("p",[e._v("- where emp.deptno = dept.deptno;")]),e._v(" "),a("p",[e._v("* 提示:加上前缀可以提高效率")]),e._v(" "),a("p",[e._v("##########[ 连接的类型 ]##########")]),e._v(" "),a("p",[e._v("* Oracle8i之前的表连接")]),e._v(" "),a("p",[e._v("- 等值连接(Equijoin)")]),e._v(" "),a("p",[e._v("- 非等值连接(Non-Equijoin)")]),e._v(" "),a("p",[e._v("- 外连接(Outer join)")]),e._v(" "),a("p",[e._v("- 左外连接")]),e._v(" "),a("p",[e._v("- 右外连接")]),e._v(" "),a("p",[e._v("- 自连接(Selfjoin)")]),e._v(" "),a("p",[e._v("* Oracle9i新引入的连接形式(支持SQL99规范):")]),e._v(" "),a("p",[e._v("- 交叉连接(Cross join)")]),e._v(" "),a("p",[e._v("- 自然连接(Natural join)")]),e._v(" "),a("p",[e._v("- 使用 Using子句建立连接")]),e._v(" "),a("p",[e._v("- 使用 On子句建立连接")]),e._v(" "),a("p",[e._v("- 外连接(Outer join)")]),e._v(" "),a("p",[e._v("- 左外连接")]),e._v(" "),a("p",[e._v("- 右外连接")]),e._v(" "),a("p",[e._v("- 全外连接")]),e._v(" "),a("p",[e._v("##########[ 多表连接 ]##########")]),e._v(" "),a("p",[e._v("* 多表连接中:")]),e._v(" "),a("p",[e._v("- 可使用 AND操作符增加查询条件")]),e._v(" "),a("p",[e._v("- 使用表别名可以简化查询")]),e._v(" "),a("p",[e._v("- 使用表名(表别名)前缀可提高查询效率")]),e._v(" "),a("p",[e._v("- 为了连接 n个表,至少需要 n-1个连接条件")]),e._v(" "),a("p",[e._v("##########[ 等值连接(Equijion) ]##########")]),e._v(" "),a("p",[e._v("* 什么是等值连接")]),e._v(" "),a("p",[e._v("- select empno, ename, sal, emp.deptno, dname")]),e._v(" "),a("p",[e._v("- from emp, dept")]),e._v(" "),a("p",[e._v("- where emp.deptno = dept.deptno;")]),e._v(" "),a("p",[e._v("##########[ 非等值连接(Not-Equijion) ]##########")]),e._v(" "),a("p",[e._v("* 问题:如何查得每个员工的工资等级")]),e._v(" "),a("p",[e._v("* 方法1:")]),e._v(" "),a("p",[e._v("- select empno, ename, sal, grade, losal, hisal")]),e._v(" "),a("p",[e._v("- from emp, salgrade")]),e._v(" "),a("p",[e._v("- where sal >= losal and sal <= hisal;")]),e._v(" "),a("p",[e._v("* 方法2:")]),e._v(" "),a("p",[e._v("- select empno, ename, sal, grade, losal, hisal")]),e._v(" "),a("p",[e._v("- from emp, salgrade")]),e._v(" "),a("p",[e._v("- where sal between losal and hisal;")]),e._v(" "),a("p",[e._v("##########[ 外连接(Outer jion) ]##########")]),e._v(" "),a("p",[e._v("* 使用外连接可以看到参与连接的某一方不满足连接条件的记录")]),e._v(" "),a("p",[e._v("* 外连接运算符为(+)")]),e._v(" "),a("p",[e._v("* 传统的外连接分为左外连接和右外边接两种")]),e._v(" "),a("p",[e._v("* 语法格式:")]),e._v(" "),a("p",[e._v("- select 字段列表")]),e._v(" "),a("p",[e._v("- from table1, table2")]),e._v(" "),a("p",[e._v("- where table1.column1(+)=table2.column2;")]),e._v(" "),a("p",[e._v("- select 字段列表")]),e._v(" "),a("p",[e._v("- from table1, table2")]),e._v(" "),a("p",[e._v("- where table1.column1=table2.column2(+);")]),e._v(" "),a("p",[e._v("* 例:")]),e._v(" "),a("p",[e._v("* 左外连接'(+)'放在右边,将左表中不符合条件的也显示出来")]),e._v(" "),a("p",[e._v("- select EMPLOYEE_ID, FIRST_NAME, SALARY, e.DEPARTMENT_ID, DEPARTMENT_NAME")]),e._v(" "),a("p",[e._v("- from employees e, departments d")]),e._v(" "),a("p",[e._v("- where e.DEPARTMENT_ID = d.DEPARTMENT_ID(+)")]),e._v(" "),a("p",[e._v("- order by EMPLOYEE_ID;")]),e._v(" "),a("p",[e._v("* 右外连接'(+)'放在左边,将右表中不符合条件的也显示出来")]),e._v(" "),a("p",[e._v("- select EMPLOYEE_ID, FIRST_NAME, SALARY, e.DEPARTMENT_ID, DEPARTMENT_NAME")]),e._v(" "),a("p",[e._v("- from employees e, departments d")]),e._v(" "),a("p",[e._v("- where e.DEPARTMENT_ID(+) = d.DEPARTMENT_ID")]),e._v(" "),a("p",[e._v("- order by EMPLOYEE_ID;")]),e._v(" "),a("p",[e._v("##########[ 自连接(Self jion) ]##########")]),e._v(" "),a("p",[e._v("* 问题:如何查得每个员工及其上司的工号和姓名")]),e._v(" "),a("p",[e._v("- select a.empno, a.ename, a.mgr, b.ename")]),e._v(" "),a("p",[e._v("- from emp a, emp b")]),e._v(" "),a("p",[e._v("- where a.mgr = b.empno")]),e._v(" "),a("p",[e._v("- order by a.empno;")]),e._v(" "),a("p",[e._v("##########[ SQL99 连接语法 ]##########")]),e._v(" "),a("p",[e._v("* SQL1999 规范中规定的连接查询语法")]),e._v(" "),a("p",[e._v("- select 字段列表")]),e._v(" "),a("p",[e._v("- from table1")]),e._v(" "),a("p",[e._v("- [cross join table2] |")]),e._v(" "),a("p",[e._v("- [natural join table2] |")]),e._v(" "),a("p",[e._v("- [join table2 using(字段名)] |")]),e._v(" "),a("p",[e._v("- [join table2 on(table.column_name = table2.column_name)] |")]),e._v(" "),a("p",[e._v("- [(left | right | full outer) join table2")]),e._v(" "),a("p",[e._v("- on(table1.column_name = table2.column_name)];")]),e._v(" "),a("p",[e._v("##########[ 交叉连接(Cross join) ]##########")]),e._v(" "),a("h2",{attrs:{id:"交叉连接-cross-join"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#交叉连接-cross-join"}},[e._v("#")]),e._v(" 交叉连接(Cross join)")]),e._v(" "),a("p",[e._v("* Cross join产生了一个笛卡尔集,其效果等同于在两个表进行连接时未使用WHERE 子句阴定连接条件")]),e._v(" "),a("p",[e._v("* 举例:")]),e._v(" "),a("p",[e._v("- select empno, ename, sal, emp.deptno, dname")]),e._v(" "),a("p",[e._v("- from emp cross join dept;")]),e._v(" "),a("p",[e._v("##########[ 自然连接(Natural join) ]##########")]),e._v(" "),a("h2",{attrs:{id:"natural-join自然连接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#natural-join自然连接"}},[e._v("#")]),e._v(" Natural join自然连接")]),e._v(" "),a("p",[e._v("* "),a("code",[e._v("Natural join")]),e._v(" 基于两个表中的全部同名列建立连接")]),e._v(" "),a("p",[e._v("- 从两个表中选出同名列的值均对应相等的所有行")]),e._v(" "),a("p",[e._v("- 如果两个表中同名列的数据类型不同,则出错")]),e._v(" "),a("p",[e._v("- 不允许在参照列上使用表名或者别名作为前缀")]),e._v(" "),a("p",[e._v("* 举例:")]),e._v(" "),a("p",[e._v("- select empno, ename, sal, deptno, dname")]),e._v(" "),a("p",[e._v("- from emp natural join dept;")]),e._v(" "),a("p",[e._v("- 上面SQL语句等同于:")]),e._v(" "),a("p",[e._v("- select empno, ename, sal, emp.deptno, dname")]),e._v(" "),a("p",[e._v("- from emp, dept")]),e._v(" "),a("p",[e._v("- where emp.deptno = dept.deptno;")]),e._v(" "),a("p",[e._v("* 注意:第一种方法的deptno不能加上表名前缀,第二种方法必须加上表名前缀")]),e._v(" "),a("h2",{attrs:{id:"using-子句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#using-子句"}},[e._v("#")]),e._v(" "),a("strong",[e._v("Using *"),a("em",[e._v("子句*")])])]),e._v(" "),a("p",[e._v("* 如果不希望参照被连接表的所有同名列进行等值连接,自然连接将无法满足")]),e._v(" "),a("p",[e._v("* 要求,可以在连接时使用Using子句来设置用于等值连接的列(参照列)名.")]),e._v(" "),a("p",[e._v("* 举例:")]),e._v(" "),a("p",[e._v("- select empno, ename, sal, deptno, dname")]),e._v(" "),a("p",[e._v("- from emp join dept")]),e._v(" "),a("p",[e._v("- using(deptno);")]),e._v(" "),a("p",[e._v("* 不允许在参照列上使用表名或者别名作为前缀")]),e._v(" "),a("h2",{attrs:{id:"on-子句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#on-子句"}},[e._v("#")]),e._v(" "),a("strong",[e._v("On *"),a("em",[e._v("子句*")])])]),e._v(" "),a("p",[e._v("* 如果要参照非同名的列进行等值连接,或想设置任意的连接条件,可以使用ON 子句")]),e._v(" "),a("p",[e._v("* 举例:")]),e._v(" "),a("p",[e._v("- select empno, ename, sal, emp.deptno, dname")]),e._v(" "),a("p",[e._v("- from emp join dept")]),e._v(" "),a("p",[e._v("- on(emp.deptno = dept.deptno);")]),e._v(" "),a("p",[e._v("* 必须加上表名前缀(emp.deptno)")]),e._v(" "),a("p",[e._v("- 上面SQL语句等同于:")]),e._v(" "),a("p",[e._v("- select empno, ename, sal, emp.deptno, dname")]),e._v(" "),a("p",[e._v("- from emp, dept")]),e._v(" "),a("p",[e._v("- where emp.deptno = dept.deptno;")]),e._v(" "),a("p",[e._v("--------------------------------------------------")]),e._v(" "),a("p",[e._v("- select empno, ename, sal, emp.deptno, dname")]),e._v(" "),a("p",[e._v("- from emp join dept")]),e._v(" "),a("p",[e._v("- on(emp.deptno = dept.deptno and sal > 2500);")]),e._v(" "),a("p",[e._v("- 上面SQL语句等同于:")]),e._v(" "),a("p",[e._v("- select empno, ename, sal, emp.deptno, dname")]),e._v(" "),a("p",[e._v("- from emp, dept")]),e._v(" "),a("p",[e._v("- where emp.deptno = dept.deptno and sal > 2500;")]),e._v(" "),a("p",[a("strong",[e._v("多表连接")])]),e._v(" "),a("p",[e._v("* 使用SQL99连接语法,两个以上的表进行连接时应依次/分别指定相临的两个表之间的连接条件")]),e._v(" "),a("p",[e._v("* 语法格式:")]),e._v(" "),a("p",[e._v("- select 字段列表")]),e._v(" "),a("p",[e._v("- from table1")]),e._v(" "),a("p",[e._v("- [cross join table2] |")]),e._v(" "),a("p",[e._v("- [natural join table2] |")]),e._v(" "),a("p",[e._v("- [join table2 using(字段名)] |")]),e._v(" "),a("p",[e._v("- [join table2 on(table1.column_name=table2.column_name)] |")]),e._v(" "),a("p",[e._v("- [(left | right | full outer) join table2")]),e._v(" "),a("p",[e._v("- on(table1.column_name=table2.column_name)]")]),e._v(" "),a("p",[e._v("- [cross join table3] |")]),e._v(" "),a("p",[e._v("- ["),a("code",[e._v("natural join")]),e._v(" table3] |")]),e._v(" "),a("p",[e._v("- [join table3 using(字段名)] |")]),e._v(" "),a("p",[e._v("- [join table3 on(table2.colimn_name=table3.column_name)] |")]),e._v(" "),a("p",[e._v("- [(left | right | full outer) join table3")]),e._v(" "),a("p",[e._v("- on(table2.column_name=table3.column_name)];")]),e._v(" "),a("p",[e._v("* 举例:")]),e._v(" "),a("p",[e._v("- SELECT EMPLOYEE_ID, FIRST_NAME, SALARY, DEPARTMENT_ID, DEPARTMENT_NAME, LOCATION_ID, CITY")]),e._v(" "),a("p",[e._v("- FROM EMPLOYEES JOIN DEPARTMENTS USING(DEPARTMENT_ID) NATURAL JOIN LOCATIONS;")]),e._v(" "),a("p",[e._v("- 上面SQL语句等同于:")]),e._v(" "),a("p",[e._v("- SELECT EMPLOYEE_ID, FIRST_NAME, SALARY, DEPARTMENT_ID, DEPARTMENT_NAME, LOCATION_ID, CITY")]),e._v(" "),a("p",[e._v("- FROM EMPLOYEES JOIN DEPARTMENTS USING(DEPARTMENT_ID) JOIN LOCATIONS USING(LOCATION_ID);")]),e._v(" "),a("p",[e._v("- 等同于:")]),e._v(" "),a("p",[e._v("- SELECT EMPLOYEE_ID, FIRST_NAME, SALARY, emp.DEPARTMENT_ID, DEPARTMENT_NAME, LOCATION_ID, CITY")]),e._v(" "),a("p",[e._v("- FROM EMPLOYEES emp JOIN DEPARTMENTS dep ON(emp.DEPARTMENT_ID = dep.DEPARTMENT_ID)")]),e._v(" "),a("p",[e._v("- JOIN LOCATIONS loc USING(LOCATION_ID);")]),e._v(" "),a("p",[e._v("- 等同于:")]),e._v(" "),a("p",[e._v("- SELECT EMPLOYEE_ID, FIRST_NAME, SALARY, emp.DEPARTMENT_ID, DEPARTMENT_NAME, dep.LOCATION_ID, CITY")]),e._v(" "),a("p",[e._v("- FROM EMPLOYEES emp JOIN DEPARTMENTS dep ON(emp.DEPARTMENT_ID = dep.DEPARTMENT_ID)")]),e._v(" "),a("p",[e._v("- JOIN LOCATIONS loc ON(dep.LOCATION_ID = loc.LOCATION_ID);")]),e._v(" "),a("h2",{attrs:{id:"内连接和外连接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内连接和外连接"}},[e._v("#")]),e._v(" "),a("strong",[e._v("内连接和外连接")])]),e._v(" "),a("p",[e._v("* 内连接(Inner Join)")]),e._v(" "),a("p",[e._v("- 在 SQL99规范中,内连接只返回满足连接条件的数据")]),e._v(" "),a("p",[e._v("* 外连接(Outer Join)")]),e._v(" "),a("p",[e._v("- 左外联接(Left Outer Join)")]),e._v(" "),a("p",[e._v("- 两个表在连接过程中除返回满足连接条件的行以外,还返回左表中不满足条件的行,这种连接称为左外联接")]),e._v(" "),a("p",[e._v("- 右外联接(Right Outer Join)")]),e._v(" "),a("p",[e._v("- 两个表在连接过程中除返回满足连接条件的行以外,还返回右表中不满足条件的行,这种连接称为右外联接")]),e._v(" "),a("p",[e._v("- 满外联接(Full Outer Join)")]),e._v(" "),a("p",[e._v("- Oracle9i 开始新增功能,两个表在连接过程中除返回满足连接条件的行以外,还返回两个表中不满足条件的所有行,这种连接称为满外联接")]),e._v(" "),a("p",[e._v("* 举例:")]),e._v(" "),a("p",[e._v("* 不满足条件的不返回(内连接(Inner Join))")]),e._v(" "),a("p",[e._v("- SELECT EMPLOYEE_ID, LAST_NAME, SALARY, DEPARTMENT_ID, DEPARTMENT_NAME")]),e._v(" "),a("p",[e._v("- FROM EMPLOYEES JOIN DEPARTMENTS USING(DEPARTMENT_ID);")]),e._v(" "),a("p",[e._v("* 左表中不满足条件也返回(左外联接(Left Outer Join))")]),e._v(" "),a("p",[e._v("- SELECT EMPLOYEE_ID, LAST_NAME, SALARY, DEPARTMENT_ID, DEPARTMENT_NAME")]),e._v(" "),a("p",[e._v("- FROM EMPLOYEES LEFT JOIN DEPARTMENTS USING(DEPARTMENT_ID);")]),e._v(" "),a("p",[e._v("* 右表中不满足条件也返回(右外联接(Right Outer Join))")]),e._v(" "),a("p",[e._v("- SELECT EMPLOYEE_ID, LAST_NAME, SALARY, DEPARTMENT_ID, DEPARTMENT_NAME")]),e._v(" "),a("p",[e._v("- FROM EMPLOYEES RIGHT JOIN DEPARTMENTS USING(DEPARTMENT_ID);")]),e._v(" "),a("p",[e._v("* 将满足条件的和左表中不满足条件的还有右表中不满足条件的,都返回(满外联接(Full Outer Join))")]),e._v(" "),a("p",[e._v("- SELECT EMPLOYEE_ID, LAST_NAME, SALARY, DEPARTMENT_ID, DEPARTMENT_NAME")]),e._v(" "),a("p",[e._v("- FROM EMPLOYEES FULL OUTER JOIN DEPARTMENTS USING(DEPARTMENT_ID);")]),e._v(" "),a("h2",{attrs:{id:"子查询-sub-query"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#子查询-sub-query"}},[e._v("#")]),e._v(" "),a("strong",[e._v("子查询*"),a("em",[e._v("(Sub Query)*")])])]),e._v(" "),a("p",[e._v("* 问题引入")]),e._v(" "),a("p",[e._v("- 如何查得所有比'张三'工资高的员工的信息")]),e._v(" "),a("p",[e._v("* 子查询")]),e._v(" "),a("p",[e._v("- 子查询在主查询前执行一次")]),e._v(" "),a("p",[e._v("- 主查询使用子查询的结果")]),e._v(" "),a("p",[e._v("- 语法格式:")]),e._v(" "),a("p",[e._v("- select 字段列表")]),e._v(" "),a("p",[e._v("- from table")]),e._v(" "),a("p",[e._v("- where 表达式 operator(select字段列表 from table);")]),e._v(" "),a("p",[e._v("* 举例:")]),e._v(" "),a("p",[e._v("- select * from emp where sal > (select sal from emp where empno = 7654);")]),e._v(" "),a("p",[e._v("##########[ 使用子查询注意事项 ]##########")]),e._v(" "),a("p",[e._v("* 在查询是基于未知值时应考虑使用子查询")]),e._v(" "),a("p",[e._v("* 子查询必须包含在括号内")]),e._v(" "),a("p",[e._v("* 建议将子查询放在比较运算符的右侧,以增强可读性")]),e._v(" "),a("p",[e._v("* 除非进行 Top-N分析,否则不要在子查询中使用ORDER BY 子句")]),e._v(" "),a("p",[e._v("* 对单行子查询使用单行运算符")]),e._v(" "),a("p",[e._v("* 对多行子查询使用多行运算符")]),e._v(" "),a("p",[e._v("##########[ 单行子查询 ]##########")]),e._v(" "),a("p",[e._v("* 单行子查询只返回一行记录")]),e._v(" "),a("p",[e._v("* 对单行子查询可使用单行记录比较运算符")]),e._v(" "),a("p",[e._v("- 运算符  含义")]),e._v(" "),a("p",[e._v("- =  等于")]),e._v(" "),a("p",[e._v("- >  大于")]),e._v(" "),a("p",[e._v("- >=  大于等于")]),e._v(" "),a("p",[e._v("- <  小于")]),e._v(" "),a("p",[e._v("- <=  小于等于")]),e._v(" "),a("p",[e._v("- <>  不等于")]),e._v(" "),a("p",[e._v("* 举例:")]),e._v(" "),a("p",[e._v("- select * from emp")]),e._v(" "),a("p",[e._v("- where sal > (select sal from emp where empno = 7566);")]),e._v(" "),a("p",[e._v("##########[ 子查询空值/多值问题]##########")]),e._v(" "),a("p",[e._v("* 如果子查询未返回任何行,则主查询也不会返回任何结果")]),e._v(" "),a("p",[e._v("- select * from emp")]),e._v(" "),a("p",[e._v("- where sal > (select sal from emp where empno = 8888);")]),e._v(" "),a("p",[e._v("* 如果子查询返回单行结果,则为单行子查询,可以在主查询中对其使用相应的单行记录比较运算符")]),e._v(" "),a("p",[e._v("- select * from emp")]),e._v(" "),a("p",[e._v("- where sal > (select sal from emp where empno = 7566);")]),e._v(" "),a("p",[e._v("* 如果子查询返回多行结果,则为多行子查询,此时不允许对其使用单行记录比较运算符")]),e._v(" "),a("p",[e._v("- select * from emp")]),e._v(" "),a("p",[e._v("- where sal > (select avg(sal) from emp group by deptno); -> (N)")]),e._v(" "),a("p",[e._v("- SELECT EMPLOYEE_ID, LAST_NAME, SALARY FROM EMPLOYEES")]),e._v(" "),a("p",[e._v("- WHERE JOB_ID = (SELECT JOB_ID FROM EMPLOYEES WHERE LAST_NAME = 'Grant'); -> (Y)")]),e._v(" "),a("p",[e._v("##########[ 多行子查询 ]##########")]),e._v(" "),a("p",[e._v("* 多行子查询返回多行记录")]),e._v(" "),a("p",[e._v("* 对多行子查询只能使用多行记录比较运算符")]),e._v(" "),a("p",[e._v("* 运算符  含义")]),e._v(" "),a("p",[e._v("- IN  等于列表中的任何一个")]),e._v(" "),a("p",[e._v("- ANY  和子查询返回的任意一个值比较")]),e._v(" "),a("p",[e._v("- ALL  和子查询返回的所有值比较")]),e._v(" "),a("p",[e._v("* 举例:")]),e._v(" "),a("p",[e._v("- select * from emp where sal > any(select avg(sal) from emp group by deptno);")]),e._v(" "),a("p",[e._v("- select * from emp where sal > all(select avg(sal) from emp group by deptno);")]),e._v(" "),a("p",[e._v("- select * from emp where job in(select job from emp where ename = 'MARTIN' or ename = 'SMITH');")]),e._v(" "),a("p",[e._v("##########[ TopN查询 ]##########")]),e._v(" "),a("p",[e._v("* 在 ORACLE中通常用子查询的方式来实现 TOP N查询")]),e._v(" "),a("p",[e._v("* 语法格式:")]),e._v(" "),a("p",[e._v("- select 字段列表")]),e._v(" "),a("p",[e._v("- from (select 字段列表 from table order by排序字段)")]),e._v(" "),a("p",[e._v("- where rownum <= n;")]),e._v(" "),a("p",[e._v("* 例:")]),e._v(" "),a("p",[e._v("- select * from (select * from emp order by sal desc) where rownum <= 5;")]),e._v(" "),a("p",[e._v("- select * from (select rownum myno, a.* from (select * from emp order by sal desc) a)")]),e._v(" "),a("p",[e._v("- where myno >= 5 and myno <= 10;")]),e._v(" "),a("h2",{attrs:{id:"注意-子查询配合表连接使用-子查询不能和left连接使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意-子查询配合表连接使用-子查询不能和left连接使用"}},[e._v("#")]),e._v(" 注意：子查询配合表连接使用，子查询不能和left连接使用")]),e._v(" "),a("h1",{attrs:{id:"oracle三范式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#oracle三范式"}},[e._v("#")]),e._v(" Oracle三范式")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("第一范式：（1NF）无重复的列\n第二范式：（2NF）属性完全依赖于主键\n第三范式：（3NF）属性不依赖于其它非主属性\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])]),a("h1",{attrs:{id:"oracle项目不推荐使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#oracle项目不推荐使用"}},[e._v("#")]),e._v(" Oracle项目不推荐使用")]),e._v(" "),a("blockquote",[a("p",[e._v("distinct ：推荐使用group by")]),e._v(" "),a("p",[e._v("子查询：使用多表查询")]),e._v(" "),a("p",[e._v("（+） ：使用left/right")])]),e._v(" "),a("h1",{attrs:{id:"oracle-dml-增删改"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#oracle-dml-增删改"}},[e._v("#")]),e._v(" Oracle DML（增删改）")]),e._v(" "),a("h2",{attrs:{id:"_1-添加"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-添加"}},[e._v("#")]),e._v(" 1.添加")]),e._v(" "),a("blockquote",[a("p",[e._v("从一个表中某行数据添加到另一个表中")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("insert into departments0713(DEPARTMENT_ID,DEPARTMENT_NAME,MANAGER_ID,LOCATION_ID)\nselect DEPARTMENT_ID,DEPARTMENT_NAME,MANAGER_ID,LOCATION_ID from departments where DEPARTMENT_ID in (20,30)\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("h1",{attrs:{id:"oracle事务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#oracle事务"}},[e._v("#")]),e._v(" Oracle事务")]),e._v(" "),a("blockquote",[a("p",[e._v("在Commit或者Rollback前后数据的状态:\n1、在数据已经被更改，但没有Commit前，被更改记录处于被锁定状态，其他用户无法进行更改;\n2、在数据已经被更改，但没有Commit前，只有当前Session的用户可以看到这种变更，其他Session的用户看不到数据的变化。\n3、在数据已经被更改，并且被Commit后，被更改记录自动解锁，其他用户可以进行更改;|\n4、在数据已经被更改，并且被Commit后，其他Session的用户再次访问这些数据时，看到的是变化后的数据。")])]),e._v(" "),a("p",[e._v("当有用户修改数据时，Oracle先把那部分原始数据备份到回滚段，在Commit之前，其他Session用户读到的这部分数据是回滚段上的;在提交之后，回滚段被释放。")]),e._v(" "),a("p",[a("strong",[e._v("查询某个表是否有锁")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("select a.*, C.type, C.LMODE\n from v$locked_object a, all_objects b, v$lock c\nwhere a.OBJECT_ID = b.OBJECT_ID\n and a.SESSION_ID = c.SID\n and b.OBJECT_NAME = 'TESTTAB3'\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br")])]),a("p",[e._v("查询某个表是否整在被锁")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" select * from testtab3 for update nowait;\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("h1",{attrs:{id:"三-oracle对象-表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三-oracle对象-表"}},[e._v("#")]),e._v(" 三.Oracle对象-表")]),e._v(" "),a("h2",{attrs:{id:"_1-对表的操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-对表的操作"}},[e._v("#")]),e._v(" 1.对表的操作")]),e._v(" "),a("blockquote",[a("p",[e._v("表的命名要求和表中列的命名要求：")]),e._v(" "),a("p",[e._v("1、必须以字母开头")]),e._v(" "),a("p",[e._v("2、长度不能超过30个字符")]),e._v(" "),a("p",[e._v("3、只能包含 A–Z, a–z, 0–9, _, $, and #")]),e._v(" "),a("p",[e._v("4、不能与数据库中的已有对象重名")]),e._v(" "),a("p",[e._v("5、不能使用Oracle 数据库的保留字")])]),e._v(" "),a("h3",{attrs:{id:"建表语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#建表语句"}},[e._v("#")]),e._v(" 建表语句：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("CREATE TABLE [schema.]table\n (column datatype [DEFAULT expr][, ...]);\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("常用的字段数据类型：")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/wangchangyin/images@main/hand/image-20210714094522941.png",alt:"image-20210714094522941"}})]),e._v(" "),a("h3",{attrs:{id:"复制表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#复制表"}},[e._v("#")]),e._v(" 复制表：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("复制表和数据\nCREATE TABLEA table as select * from tableb\n复制表结构\nCREATE TABLEA table as select * from tableb where 1=2\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])]),a("h3",{attrs:{id:"删除表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除表"}},[e._v("#")]),e._v(" 删除表")]),e._v(" "),a("p",[e._v("注意：表被删 除后，任何依赖于这张表的视图、Package等数据库对象都自动变为无效：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("DROP TABLE tableName;  --删除表与数据\nTRUNCATE TABLE tableName; ——清空表数据 但保留表结构：\ndelete from tableName;    ——清空表数据\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])]),a("blockquote",[a("p",[e._v("注意TRUNCATE 与DELETE FROM table 的区别： 1）没有Rollback机会 2）HWM标记复位")]),e._v(" "),a("p",[e._v("补充：HWM标记复位是什么？")]),e._v(" "),a("blockquote",[a("p",[e._v('所有的oracle段都有一个在段内容纳数据的上限，我们把这个上限称为"high water mark"或HWM。这个HWM是一个标记，用来说明已经有多少没有使用的数据块分配给这个segment。HWM通常增长的幅度为一次5个数据块，原则上HWM只会增大，不会缩小，即使将表中的数据全部删除，HWM还是为原值，由于这个特点，使HWM很象一个水库的历史最高水位，这也就是HWM的原始含义，当然不能说一个水库没水了，就说该水库的历史最高水位为0。'),a("code",[e._v("但是如果我们在表上使用了truncate命令，则该表的HWM会被重新置为0。")])])])]),e._v(" "),a("h3",{attrs:{id:"更改表名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#更改表名"}},[e._v("#")]),e._v(" 更改表名")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("RENAME oldtablename to newtableName;\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("h2",{attrs:{id:"_2-对列的操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-对列的操作"}},[e._v("#")]),e._v(" 2.对列的操作：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("添加列：\nALTER TABLE table\nADD (column datatype [DEFAULT expr]\n [, column datatype]...);\n更改列：\nALTER TABLE table\nMODIFY (column datatype [DEFAULT expr]\n [, column datatype]...);\n删除列：\nALTER TABLE table\nDROP (column)\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br")])]),a("h2",{attrs:{id:"_3-约束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-约束"}},[e._v("#")]),e._v(" 3.约束")]),e._v(" "),a("blockquote",[a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("常用的约束有如下几种：\nNOT NULL （非空约束）\nUNIQUE （唯一性约束）\nPRIMARY KEY （主键约束）  :尽量别用\nFOREIGN KEY （外键约束）\nCHECK （自定义约束）：\n\tcheck的使用：salary必须大于0\n    .., salary NUMBER(2)\n    CONSTRAINT emp_salary_min \n    CHECK (salary > 0),.\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br")])])]),e._v(" "),a("h3",{attrs:{id:"_3-1-添加约束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-添加约束"}},[e._v("#")]),e._v(" 3.1.添加约束")]),e._v(" "),a("p",[e._v("建表的时候添加约束：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("CREATE TABLE employees(\n employee_id NUMBER(6),\n first_name VARCHAR2(20),\n ...\n job_id VARCHAR2(10) NOT NULL,\n CONSTRAINT emp_emp_id_pk\n PRIMARY KEY (EMPLOYEE_ID));\n\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br")])]),a("p",[e._v("单独创建约束语法：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("ALTER TABLE CUX_LES_JE_LINES ADD CONSTRAINT CUX_LES_JE_LINES_PK \n PRIMARY KEY(JE_LINE_ID);\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("h3",{attrs:{id:"_3-2-删除约束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-删除约束"}},[e._v("#")]),e._v(" 3.2.删除约束")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("ALTER TABLE departments\nDROP PRIMARY KEY CASCADE;\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("h3",{attrs:{id:"_3-3-约束失效"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-约束失效"}},[e._v("#")]),e._v(" 3.3.约束失效")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("ALTER TABLE employees\nENABLE CONSTRAINTemp_emp_id_pk;\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("h3",{attrs:{id:"_3-4-查看某个表有哪些约束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-查看某个表有哪些约束"}},[e._v("#")]),e._v(" 3.4.查看某个表有哪些约束")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("SELECT constraint_name, constraint_type,\nsearch_condition\nFROM user_constraints\nWHERE table_name = 'EMPLOYEES'\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])]),a("h2",{attrs:{id:"_4-试图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-试图"}},[e._v("#")]),e._v(" 4.试图")]),e._v(" "),a("h3",{attrs:{id:"_4-1-创建视图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-创建视图"}},[e._v("#")]),e._v(" 4.1.创建视图")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("CREATE VIEW empvu80\nAS SELECT employee_id, last_name, salary\n FROM employees\n WHERE department_id = 80;\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])]),a("h3",{attrs:{id:"_4-2-删除试图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-删除试图"}},[e._v("#")]),e._v(" 4.2.删除试图")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("DROP VIEW empvu80\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("h3",{attrs:{id:"_4-3-top-n-查询-查询某个表前n行数据-并显示行号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-top-n-查询-查询某个表前n行数据-并显示行号"}},[e._v("#")]),e._v(" 4.3.TOP-N 查询：查询某个表前N行数据，并显示行号")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("SELECT [column_list], ROWNUM \nFROM (SELECT [column_list] \n FROM table\n ORDER BY Top-N_column)\nWHERE ROWNUM <= N;\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br")])]),a("h3",{attrs:{id:"_4-4-视图可以修改吗"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-视图可以修改吗"}},[e._v("#")]),e._v(" 4.4.视图可以修改吗？")]),e._v(" "),a("blockquote",[a("p",[e._v("update的情况，必须是一下情况")]),e._v(" "),a("p",[e._v("\\1. view的字段只涉及一个表。\n\\2. 如果涉及多个表的话，被(涉及到的)view列所映射table列(或列的组合)必须是有主健约束的\\3. 强制执行，方法是加上hint /*+ BYPASS_UJVC */")])]),e._v(" "),a("h2",{attrs:{id:"_5-序列-类似mysql中的自增主键"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-序列-类似mysql中的自增主键"}},[e._v("#")]),e._v(" 5.序列（类似mysql中的自增主键）")]),e._v(" "),a("p",[e._v("注意：是不存在与某一个表，保存在内存中，通过sequence.NEXTVAL获取下一个，sequence.CURRVAL 获取上一个")]),e._v(" "),a("blockquote",[a("p",[e._v("有的时候我们定义某一张表中某一列为主键，当我们往表中插入数据的时候，"),a("code",[e._v("对于主键字段的赋值要求唯一性")]),e._v("， 我们希望能有个自增长类型的数据库对象，我们每获取一次，它自动增长，保证下次获取时肯定是不一样的值， 这样我们就方便了，Oracle 数据库提供“序列”这种对象来满足我们的要求。")])]),e._v(" "),a("h3",{attrs:{id:"_5-1-创建序列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-创建序列"}},[e._v("#")]),e._v(" 5.1.创建序列")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("CREATE SEQUENCE sequence\n [INCREMENT BY n]  //自增阶梯  默认1\n [START WITH n]   //从多少开始\n [{MAXVALUE n | NOMAXVALUE}] //最大值\n [{MINVALUE n | NOMINVALUE}] //最小值\n [{CYCLE | NOCYCLE}]\n [{CACHE n | NOCACHE}];\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br")])]),a("blockquote",[a("ol",[a("li",[a("p",[e._v("INCREMENT BY用于定义序列的步长，如果省略，则默认为1，如果出现负值，则代表Oracle序列的值是按照此步长递减的。")])]),e._v(" "),a("li",[a("p",[e._v("START WITH 定义序列的初始值(即产生的第一个值)，默认为1。")])]),e._v(" "),a("li",[a("p",[e._v("MAXVALUE 定义序列生成器能产生的最大值。选项NOMAXVALUE是默认选项，代表没有最大值定义，这时对于递增Oracle序列，系统能够产生的最大值是10的27次方;对于递减序列，最大值是-1。")])]),e._v(" "),a("li",[a("p",[e._v("MINVALUE定义序列生成器能产生的最小值。选项NOMAXVALUE是默认选项，代表没有最小值定义，这时对于递减序列，系统能够产生的最小值是?10的26次方;对于递增序列，最小值是1。")])]),e._v(" "),a("li",[a("p",[e._v("CYCLE和NOCYCLE 表示当序列生成器的值达到限制值后是否循环。CYCLE代表循环，NOCYCLE代表不循环。如果循环，则当递增序列达到最大值时，循环到最小值;对于递减序列达到最小值时，循环到最大值。如果不循环，达到限制值后，继续产生新值就会发生错误。")])]),e._v(" "),a("li",[a("p",[e._v("CACHE(缓冲)定义存放序列的内存块的大小，默认为20。NOCACHE表示不对序列进行内存缓冲。对序列进行内存缓冲，可以改善序列的性能。")])])]),e._v(" "),a("p",[e._v("大量语句发生请求，申请序列时，为了避免序列在运用层实现序列而引起的性能瓶颈。Oracle序列允许将序列提前生成 cache x个先存入内存，在发生大量申请序列语句时，可直接到运行最快的内存中去得到序列。但cache个数也不能设置太大，因为在数据库重启时，会清空内存信息，预存在内存中的序列会丢失，当数据库再次启动后，序列从上次内存中最大的序列号+1 开始存入cache x个。这种情况也能会在数据库关闭时也会导致序号不连续。")]),e._v(" "),a("ol",{attrs:{start:"7"}},[a("li",[a("p",[e._v("NEXTVAL 返回序列中下一个有效的值，任何用户都可以引用。")])]),e._v(" "),a("li",[a("p",[e._v("CURRVAL 中存放序列的当前值,NEXTVAL 应在 CURRVAL 之前指定 ，二者应同时有效。")])])])]),e._v(" "),a("h3",{attrs:{id:"_5-2-使用序列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-使用序列"}},[e._v("#")]),e._v(" 5.2.使用序列")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("INSERT INTO departments(department_id, \n department_name, location_id)\nVALUES (dept_deptid_seq.NEXTVAL, \n 'Support', 2500);\nSELECT dept_deptid_seq.CURRVAL\nFROM dual;\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br")])]),a("h3",{attrs:{id:"_5-3-更改序列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-更改序列"}},[e._v("#")]),e._v(" 5.3.更改序列")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("ALTER SEQUENCE dept_deptid_seq\n INCREMENT BY 20\n MAXVALUE 999999\n NOCACHE NOCYCLE;\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])]),a("h3",{attrs:{id:"_5-4-删除序列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-删除序列"}},[e._v("#")]),e._v(" 5.4.删除序列")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("DROP SEQUENCE dept_deptid_seq\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("h2",{attrs:{id:"_6-索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-索引"}},[e._v("#")]),e._v(" 6.索引")]),e._v(" "),a("h3",{attrs:{id:"_6-1-oracle中索引的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-oracle中索引的区别"}},[e._v("#")]),e._v(" 6.1.oracle中索引的区别：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("逻辑上：\nSingle column 单行索引\nConcatenated 多行索引\nUnique 唯一索引\nNonUnique 非唯一索引\nFunction-based函数索引\nDomain 域索引\n \n物理上：\nPartitioned 分区索引\nNonPartitioned 非分区索引\nB-tree：\nNormal 正常型B树\nRever Key 反转型B树 \nBitmap 位图索引\n \n索引结构：\nB-tree：\n适合与大量的增、删、改（OLTP）；\n不能用包含OR操作符的查询；\n适合高基数的列（唯一值多）\n典型的树状结构；\n每个结点都是数据块；\n大多都是物理上一层、两层或三层不定，逻辑上三层；\n叶子块数据是排序的，从左向右递增；\n在分支块和根块中放的是索引的范围；\nBitmap:\n适合与决策支持系统；\n做UPDATE代价非常高；\n非常适合OR操作符的查询； \n基数比较少的时候才能建位图索引；\n \n树型结构：\n索引头 \n开始ROWID，结束ROWID（先列出索引的最大范围）\nBITMAP\n每一个BIT对应着一个ROWID，它的值是1还是0，如果是1，表示着BIT对应的ROWID有值\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br"),a("span",{staticClass:"line-number"},[e._v("16")]),a("br"),a("span",{staticClass:"line-number"},[e._v("17")]),a("br"),a("span",{staticClass:"line-number"},[e._v("18")]),a("br"),a("span",{staticClass:"line-number"},[e._v("19")]),a("br"),a("span",{staticClass:"line-number"},[e._v("20")]),a("br"),a("span",{staticClass:"line-number"},[e._v("21")]),a("br"),a("span",{staticClass:"line-number"},[e._v("22")]),a("br"),a("span",{staticClass:"line-number"},[e._v("23")]),a("br"),a("span",{staticClass:"line-number"},[e._v("24")]),a("br"),a("span",{staticClass:"line-number"},[e._v("25")]),a("br"),a("span",{staticClass:"line-number"},[e._v("26")]),a("br"),a("span",{staticClass:"line-number"},[e._v("27")]),a("br"),a("span",{staticClass:"line-number"},[e._v("28")]),a("br"),a("span",{staticClass:"line-number"},[e._v("29")]),a("br"),a("span",{staticClass:"line-number"},[e._v("30")]),a("br"),a("span",{staticClass:"line-number"},[e._v("31")]),a("br"),a("span",{staticClass:"line-number"},[e._v("32")]),a("br"),a("span",{staticClass:"line-number"},[e._v("33")]),a("br"),a("span",{staticClass:"line-number"},[e._v("34")]),a("br"),a("span",{staticClass:"line-number"},[e._v("35")]),a("br"),a("span",{staticClass:"line-number"},[e._v("36")]),a("br"),a("span",{staticClass:"line-number"},[e._v("37")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("1. b-tree索引\nOracle数据库中最常见的索引类型是b-tree索引，也就是B-树索引，以其同名的计算科学结构命名。CREATE \nINDEX语句时，默认就是在创建b-tree索引。没有特别规定可用于任何情况。\n2. 位图索引(bitmap index)\n位图索引特定于该列只有几个枚举值的情况，比如性别字段，标示字段比如只有0和1的情况。\n3. 基于函数的索引\n比如经常对某个字段做查询的时候是带函数操作的，那么此时建一个函数索引就有价值了。\n4. 分区索引和全局索引\n这2个是用于分区表的时候。前者是分区内索引，后者是全表索引\n5. 反向索引（REVERSE）\n这个索引不常见，但是特定情况特别有效，比如一个varchar(5)位字段(员工编号)含值\n（10001,10002,10033,10005,10016..）\n这种情况默认索引分布过于密集，不能利用好服务器的并行\n但是反向之后10001,20001,33001,50001,61001就有了一个很好的分布，能高效的利用好并行运算。\n6.HASH索引\nHASH索引可能是访问数据库中数据的最快方法，但它也有自身的缺点。集群键上不同值的数目必须在创建HASH集群之前就要知道。需要在创建HASH集群的时候指定这个值。使用HASH索引必须要使用HASH集群。\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br"),a("span",{staticClass:"line-number"},[e._v("16")]),a("br")])]),a("h3",{attrs:{id:"_6-2-创建索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-创建索引"}},[e._v("#")]),e._v(" 6.2.创建索引")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("--普通索引Normal\nCREATE INDEX emp_last_name_idx\nON employees(last_name);\n--唯一索引Unique\nCREATE INDEX emp_last_name_idx\nON employees(last_name);\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br")])]),a("h3",{attrs:{id:"_6-3-什么时候适合索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-什么时候适合索引"}},[e._v("#")]),e._v(" 6.3.什么时候适合索引")]),e._v(" "),a("p",[e._v("在什么样的情况下创建索引对加快查询有利呢：")]),e._v(" "),a("blockquote",[a("p",[e._v("查询条件中使用到这个列（或者这个列于其他列的组合），且这个列（或者与其他列的组合）上的数字 范围跨度很大，而大多数情况下我们要获取的数据的量占整个表的数据总量 小于4%；")])]),e._v(" "),a("p",[e._v("在什么样的情况下不适合创建索引呢：")]),e._v(" "),a("blockquote",[a("p",[e._v("被查询的表本身就很小，即是是全表扫描也非常快； 或者基于这张表的查询，大多数情况下需要获取 的数据量都超过了总量的4%；或者这张表需要频繁的被更新，建立索引的话会引起索引的频繁更新，从而反而 降低数据库的整体效率。")])]),e._v(" "),a("h3",{attrs:{id:"_6-4-索引函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-索引函数"}},[e._v("#")]),e._v(" 6.4.索引函数")]),e._v(" "),a("p",[e._v("当查询语句的Where条件中，对于某些列使用了函数表达式时，普通索引对查询没有帮助，如果想利用索引，则 必须创建函数索引，比如在下面的例子中，")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("SELECT *\nFROM departments\nWHERE UPPER(department_name) = 'SALES'\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])]),a("p",[e._v("对于上述查询语句，如果建立普通索引，比如Create index dp_idx2 on departments(department_name) 那么上述SQL执行的时候，Oracle是不会走索引的，需要建立函数索引：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("CREATE INDEX upper_dept_name_idx ON departments(UPPER(department_name))\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("h2",{attrs:{id:"_7-同义词"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-同义词"}},[e._v("#")]),e._v(" 7.同义词")]),e._v(" "),a("h3",{attrs:{id:"_7-1-db-link-不同数据库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-db-link-不同数据库"}},[e._v("#")]),e._v(" 7.1.DB-LINK（不同数据库）")]),e._v(" "),a("blockquote",[a("p",[e._v("Database Link , 如果你需要在当前数据库中访问另一个数据库中表，最简单的方法是在当前数据库中创建一个 数据库连接指向另一个数据库，然后通过@数据库连接的后缀就可以访问另一个数据库中的表了。")])]),e._v(" "),a("p",[e._v("创建 DB-LINK，通过DB-LINK 访问另一数据库中的")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("CREATE PUBLIC DATABASE LINK hq.acme.com \n\nUSING 'sales';\n\nSELECT * FROM emp@HQ.ACME.COM;\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br")])]),a("h3",{attrs:{id:"_7-2-同义词"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-同义词"}},[e._v("#")]),e._v(" 7.2.同义词")]),e._v(" "),a("p",[e._v("当同一个数据库的A用户要访问B用户的表，需要加上前端B.table")]),e._v(" "),a("p",[e._v("当我们要通过DB-LINK访问另一个数据库中的某张表的时候我们需要加@后缀 @db-link-name")]),e._v(" "),a("blockquote",[a("p",[e._v("为了在程序中能够简化写法，Oracle 提供同义词，也就是可以在A用户下建立一个同义词指向B用户下的 Table1, 以后访问的时候可以直接访问这个同义词，而不用加前缀了。")])]),e._v(" "),a("h3",{attrs:{id:"_7-2-创建同义词"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-创建同义词"}},[e._v("#")]),e._v(" 7.2.创建同义词")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("CREATE SYNONYM Table1 for B.Table1\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("A用户就可以通过同义词访问B的表：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("select * from Table1\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("h2",{attrs:{id:"_8-控制权限"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-控制权限"}},[e._v("#")]),e._v(" 8.控制权限")]),e._v(" "),a("p",[e._v("每个人登录Oracle数据库都是以某个特定的数据库用户登录的，用户能否创建表？ 该用户能否访问其他用户 下面的表。。等等这些事情都是可以利用Oracle的权限控制机制进行控制的。")]),e._v(" "),a("h3",{attrs:{id:"_8-1-给某个用户赋予权限"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-1-给某个用户赋予权限"}},[e._v("#")]),e._v(" 8.1.给某个用户赋予权限")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("GRANT create session //会员权限\n , create table//表权限\n , create procedure //存储过程权限\n , create sequence//序列\n , create trigger\n , create view\n , create synonym \n , alter session\nTO HPOS;\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br")])]),a("h3",{attrs:{id:"_8-2-添加角色"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-2-添加角色"}},[e._v("#")]),e._v(" 8.2.添加角色")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("CREATE ROLE manager ;  --创建manager角色\nGRANT create table, create view to manager; --manager赋予创建表、视图权限\nGRANT manager to DEHAAN, KOCHHAR; --DEHAAN, KOCHHAR拥有manager的权限\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])]),a("h3",{attrs:{id:"_8-3-给用户赋予修改某个表某个字段权限"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-3-给用户赋予修改某个表某个字段权限"}},[e._v("#")]),e._v(" 8.3.给用户赋予修改某个表某个字段权限")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("GRANT update (department_name, location_id)\nON departments\nTO scott, manager;\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])]),a("h3",{attrs:{id:"_8-4-权限传递"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-4-权限传递"}},[e._v("#")]),e._v(" 8.4.权限传递")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("如果你想让其他用户也有权 把你赋给他的权限进一步赋予给别人，那么需要带 WITH GRANT OPTION;\nGRANT select, insert\nON departments\nTO scott\nWITH GRANT OPTION;\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br")])]),a("h3",{attrs:{id:"_8-5-所有人都有某权限"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-5-所有人都有某权限"}},[e._v("#")]),e._v(" 8.5.所有人都有某权限")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("GRANT select\nON alice.departments\nTO PUBLIC;\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])]),a("h3",{attrs:{id:"_8-6-权限数据字典"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-6-权限数据字典"}},[e._v("#")]),e._v(" 8.6.权限数据字典")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/wangchangyin/images@main/hand/image-20210714150513801.png",alt:"image-20210714150513801"}})]),e._v(" "),a("h3",{attrs:{id:"_8-7-收回权限"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-7-收回权限"}},[e._v("#")]),e._v(" 8.7.收回权限")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("REVOKE {privilege [, privilege...]|ALL}\nON object\nFROM {user[, user...]|role|PUBLIC}\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])]),a("h2",{attrs:{id:"_9-oracle集合"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-oracle集合"}},[e._v("#")]),e._v(" 9.Oracle集合")]),e._v(" "),a("h3",{attrs:{id:"_9-1-并集"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-1-并集"}},[e._v("#")]),e._v(" 9.1.并集")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("UNION 去重\nUNION ALL  不去重\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("h3",{attrs:{id:"_9-2-交集"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-2-交集"}},[e._v("#")]),e._v(" 9.2.交集")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("INTERSECT\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("h3",{attrs:{id:"_9-3-差集"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-3-差集"}},[e._v("#")]),e._v(" 9.3.差集")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("MINUS\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("h2",{attrs:{id:"_10-group-by子句增强"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-group-by子句增强"}},[e._v("#")]),e._v(" 10.Group by子句增强")]),e._v(" "),a("h3",{attrs:{id:"_10-1-rollup关键字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-1-rollup关键字"}},[e._v("#")]),e._v(" 10.1.ROLLUP关键字")]),e._v(" "),a("p",[e._v("Rollup 后面跟了n个字段，就将进行n+1次分组，从右到左每次减少一个字段进行分组；然后进行 union")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("SELECT department_id, job_id, SUM(salary)\nFROM employees \nWHERE department_id < 60\nGROUP BY ROLLUP(department_id, job_id);\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])]),a("p",[e._v("查询出来的结果：从group by右边每次减少一个，所以对department_id再进行一次分组")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/wangchangyin/images@main/hand/image-20210715101315667.png",alt:"image-20210715101315667"}})]),e._v(" "),a("h3",{attrs:{id:"_10-2-cube"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-2-cube"}},[e._v("#")]),e._v(" 10.2.Cube")]),e._v(" "),a("p",[e._v("Cube 后面跟了n个字段，就将进行2的N次方的分组运算，然后进行；")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("SELECT department_id, job_id ,SUM(salary)\nFROM employees \nWHERE department_id < 60\nGROUP BY cube(department_id, job_id);  --对两个字段都额外分组\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/wangchangyin/images@main/hand/image-20210715101926612.png",alt:"image-20210715101926612"}})]),e._v(" "),a("h3",{attrs:{id:"_10-3-grouping关键字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-3-grouping关键字"}},[e._v("#")]),e._v(" 10.3.grouping关键字")]),e._v(" "),a("p",[e._v("由于ROLLUP、CUBE对字段进行额外的分组，可以使用grouping函数，没有被分组的列返回1，否则返回0")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/wangchangyin/images@main/hand/image-20210715102229290.png",alt:"image-20210715102229290"}})]),e._v(" "),a("h3",{attrs:{id:"_10-4-grouping-set关键字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-4-grouping-set关键字"}},[e._v("#")]),e._v(" 10.4.grouping set关键字")]),e._v(" "),a("p",[e._v("分别对（department_id,job_id）、（job_id,manager_id）进行分组")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("--GROUPING SETS\nSELECT department_id, job_id, grouping(department_id),grouping(job_id),grouping(manager_id)\n manager_id,avg(salary)\nFROM employees_copy\nGROUP BY GROUPING SETS \n((department_id,job_id), (job_id,manager_id));\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/wangchangyin/images@main/hand/image-20210715102835413.png",alt:"image-20210715102835413"}})]),e._v(" "),a("h2",{attrs:{id:"_11-子查询进阶"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-子查询进阶"}},[e._v("#")]),e._v(" 11.子查询进阶")]),e._v(" "),a("h3",{attrs:{id:"_11-1-把查询结果当做一个表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-1-把查询结果当做一个表"}},[e._v("#")]),e._v(" 11.1.把查询结果当做一个表")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("--把查询结果当做一个表\n--查询员工大于自己部门的平均工资\nSELECT a.last_name, a.salary, a.department_id, b.salavg\n  FROM employees_copy a,\n       (SELECT department_id, AVG(salary) salavg\n          FROM employees_copy\n         GROUP BY department_id) b\n WHERE a.department_id = b.department_id\n   AND a.salary > b.salavg;\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br")])]),a("h3",{attrs:{id:"_11-2-当做某个判断条件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-2-当做某个判断条件"}},[e._v("#")]),e._v(" 11.2.当做某个判断条件")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("--查询工资大于平均工资的员工信息\nSELECT last_name, salary, department_id\n  FROM employees\n outer WHERE salary > (SELECT AVG(salary)\n                         FROM employees\n                        WHERE department_id = outer.department_id);\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br")])]),a("h3",{attrs:{id:"_11-3-exists关键字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-3-exists关键字"}},[e._v("#")]),e._v(" 11.3.exists关键字")]),e._v(" "),a("blockquote",[a("p",[e._v("EXISTS(包括 NOT EXISTS )子句的返回值是一个BOOL值。 EXISTS内部有一个子查询语句(SELECT ... FROM...)， 我将其称为EXIST的内查询语句。其内查询语句返回一个结果集。 EXISTS子句根据其内查询语句的结果集空或者非空，返回一个布尔值。")]),e._v(" "),a("p",[e._v("一种通俗的可以理解为：将外查询表的每一行，代入内查询作为检验，如果内查询返回的结果取非空值，则EXISTS子句返回TRUE，这一行行可作为外查询的结果行，否则不能作为结果。")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("SELECT employee_id, last_name, job_id, department_id\n  FROM employees\n outer WHERE EXISTS\n --满足一条就执行\n (SELECT 'X' FROM employees WHERE manager_id = outer.employee_id);\n\nSELECT employee_id, last_name, job_id, department_id\n  FROM employees\n WHERE employee_id IN\n       (SELECT manager_id FROM employees WHERE manager_id IS NOT NULL);\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br")])]),a("p",[a("strong",[e._v("IN适合于外表大而内表小的情况；EXISTS适合于外表小而内表大的情况。")])]),e._v(" "),a("h3",{attrs:{id:"_11-4-not-exists"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-4-not-exists"}},[e._v("#")]),e._v(" 11.4.Not Exists")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("SELECT department_id, department_name\n  FROM departments d\n WHERE NOT EXISTS\n (SELECT 'X' FROM employees WHERE department_id = d.department_id);\n \nSELECT department_id, department_name\n  FROM departments\n WHERE department_id NOT IN (SELECT department_id FROM employees);\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br")])]),a("blockquote",[a("p",[e._v("注意：Not In 里面只要有一个NULL ，就不成立了，这是很容易出错的地方； 正确的方法请在后 面的子查询中加上where department_id is not null")])]),e._v(" "),a("h3",{attrs:{id:"_11-5某个表的字段更新为另一个表的字段-慎用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-5某个表的字段更新为另一个表的字段-慎用"}},[e._v("#")]),e._v(" 11.5某个表的字段更新为另一个表的字段（慎用）")]),e._v(" "),a("p",[e._v("员工表的department_name去查询部门表获取，通过department_id关联")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("UPDATE employees e\nSET department_name = \n (SELECT department_name\n FROM departments d\n WHERE e.department_id = d.department_id);\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br")])]),a("h3",{attrs:{id:"_11-6-子查询delete-不用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-6-子查询delete-不用"}},[e._v("#")]),e._v(" 11.6.子查询delete（不用）")]),e._v(" "),a("p",[e._v("删除工作年限五年，并且开始时间与员工入职时间相同的")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("DELETE FROM job_history JH\n WHERE employee_id =\n (SELECT employee_id\n FROM employees E\n WHERE JH.employee_id = E.employee_id\n AND start_date =\n (SELECT MIN(start_date) \n FROM job_history JH\n WHERE JH.employee_id = E.employee_id)\n AND 5 > (SELECT COUNT(*) \n FROM job_history JH\n WHERE JH.employee_id = E.employee_id\n GROUP BY employee_id\nHAVING COUNT(*) >= 4));\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br")])]),a("h3",{attrs:{id:"_11-7-with关键字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-7-with关键字"}},[e._v("#")]),e._v(" 11.7.With关键字")]),e._v(" "),a("p",[e._v("类似于取别名")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" --with关键字\nWITH dept_costs AS\n (SELECT d.department_name, SUM(e.salary) AS dept_total\n    FROM employees e, departments d\n   WHERE e.department_id = d.department_id\n   GROUP BY d.department_name),\navg_cost AS\n (SELECT SUM(dept_total) / COUNT(*) AS dept_avg FROM dept_costs)\n\n--使用别名\nSELECT *\n  FROM dept_costs\n WHERE dept_total > (SELECT dept_avg FROM avg_cost)\n ORDER BY department_name;\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br")])]),a("p",[e._v("使用WITH好处：")]),e._v(" "),a("blockquote",[a("p",[e._v("1） 如果在后面多次使用则可以简化SQL ;")]),e._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[e._v("适当提高性能")])])]),e._v(" "),a("h2",{attrs:{id:"_12-递归查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-递归查询"}},[e._v("#")]),e._v(" 12.递归查询")]),e._v(" "),a("p",[e._v("递归语句：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('SELECT [LEVEL], column, expr...\nFROM table\n[WHERE condition(s)]\n[START WITH condition(s)]\n[CONNECT BY PRIOR condition(s)] ;\n\n\nmanager_id===员工上级ID  ,employee_id ===员工ID\n--查找employee_id=100的下级员工\nSELECT last_name || \' reports to \' || PRIOR last_name as "列名",\n       PRIOR job_id as "parent_jobid",\n       job_id\n  FROM employees\n START WITH employee_id=100\nCONNECT BY PRIOR employee_id = manager_id;\n\n--查找employee_id=100的上级员工\nSELECT last_name || \' reports to \' || PRIOR last_name as "列名",\n       PRIOR job_id as "parent_jobid",\n       job_id\n  FROM employees\n START WITH employee_id=100\nCONNECT BY PRIOR manager_id = employee_id;\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br"),a("span",{staticClass:"line-number"},[e._v("16")]),a("br"),a("span",{staticClass:"line-number"},[e._v("17")]),a("br"),a("span",{staticClass:"line-number"},[e._v("18")]),a("br"),a("span",{staticClass:"line-number"},[e._v("19")]),a("br"),a("span",{staticClass:"line-number"},[e._v("20")]),a("br"),a("span",{staticClass:"line-number"},[e._v("21")]),a("br"),a("span",{staticClass:"line-number"},[e._v("22")]),a("br"),a("span",{staticClass:"line-number"},[e._v("23")]),a("br")])]),a("p",[a("code",[e._v("LEVEL")]),e._v("关键字和 "),a("code",[e._v("LPAD")]),e._v("函数 ，在OUTPUT中显示树形层次。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("--递归查找employee_id=100的下级  根据树形级别在左边填充*\nSELECT LPAD(last_name, LENGTH(last_name) + (LEVEL * 2) - 2, '*') AS org_chart,LEVEL\n  FROM employees\n START WITH employee_id = 100\nCONNECT BY PRIOR employee_id = manager_id\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/wangchangyin/images@main/hand/image-20210715145217398.png",alt:"image-20210715145217398"}})]),e._v(" "),a("h2",{attrs:{id:"_13-insert增强-插入几个表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13-insert增强-插入几个表"}},[e._v("#")]),e._v(" 13.insert增强（插入几个表）")]),e._v(" "),a("h3",{attrs:{id:"_13-1-一个来源插入多个目标表-无条件-。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13-1-一个来源插入多个目标表-无条件-。"}},[e._v("#")]),e._v(" 13.1.一个来源插入多个目标表（无条件）。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("--根据查询的结果分别插入到sal_history、mgr_history表\nINSERT ALL \nINTO sal_history VALUES(EMPID, HIREDATE, SAL) \nINTO mgr_history VALUES(EMPID, MGR, SAL)\n  SELECT employee_id EMPID, hire_date HIREDATE, salary SAL, manager_id MGR\n    FROM employees\n   WHERE employee_id > 200;\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br")])]),a("h3",{attrs:{id:"_13-2-一个来源插入多个目标表-有条件-首次匹配即跳到下一条"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13-2-一个来源插入多个目标表-有条件-首次匹配即跳到下一条"}},[e._v("#")]),e._v(" 13.2.一个来源插入多个目标表（有条件，首次匹配即跳到下一条）")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("--依次匹配，插入到一个表中即可\nINSERT FIRST\n WHEN SAL > 25000 THEN INTO special_sal VALUES(DEPTID, SAL)\n WHEN HIREDATE like ('%00%') THEN INTO hiredate_history_00 VALUES(DEPTID,HIREDATE)\n WHEN HIREDATE like ('%99%') THEN INTO hiredate_history_99 VALUES(DEPTID, HIREDATE)\n ELSE INTO hiredate_history VALUES(DEPTID, HIREDATE)\n   SELECT department_id DEPTID, SUM(salary) SAL,\n   MAX(hire_date) HIREDATE\n   FROM employees\n   GROUP BY department_id;\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br")])]),a("h2",{attrs:{id:"_14-sql进阶"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_14-sql进阶"}},[e._v("#")]),e._v(" 14.sql进阶")]),e._v(" "),a("h3",{attrs:{id:"_14-1-查询部门的平均工资、最高工资和最低工资-并且把员工都查询出来"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_14-1-查询部门的平均工资、最高工资和最低工资-并且把员工都查询出来"}},[e._v("#")]),e._v(" 14.1.查询部门的平均工资、最高工资和最低工资，并且把员工都查询出来")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("--查询根据部门名的平均工资、最高工资和最低工资（每个员工都要被查出来）\nSELECT e.last_name,\n       e.salary,\n       d.department_name,\n       AVG(e.salary) over(PARTITION BY d.department_name) department_avg_salary,\n       MAX(e.salary) over(PARTITION BY d.department_name) department_max_salary,\n       MIN(e.salary) over(PARTITION BY d.department_name) department_min_salary\n  FROM employees e, departments d\n WHERE 1 = 1\n   AND e.department_id = d.department_id;\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br")])]),a("p",[e._v("使用子查询+表连接配合也可以实现：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("select e1.last_name,e1.salary,e1.department_id,e2.avgFiled,e2.maxFiled,e2.minFiled \nfrom employees e1,\n(select department_id, AVG(salary) as avgFiled,MAX(salary) as maxFiled,MIN(salary) as minFiled from employees group by department_id) e2,\ndepartments d \nwhere e1.department_id = e2.department_id\nand e1.department_id = d.department_id;\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/wangchangyin/images@main/hand/image-20210715152020179.png",alt:"image-20210715152020179"}})]),e._v(" "),a("h3",{attrs:{id:"_14-2-将一个部门内的员工的工资从高到低进行排序-注意三种排序结果是不一样的。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_14-2-将一个部门内的员工的工资从高到低进行排序-注意三种排序结果是不一样的。"}},[e._v("#")]),e._v(" 14.2.将一个部门内的员工的工资从高到低进行排序，注意三种排序结果是不一样的。")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/wangchangyin/images@main/hand/image-20210715152230038.png",alt:"image-20210715152230038"}})]),e._v(" "),a("h3",{attrs:{id:"_14-3-oracle的闪回机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_14-3-oracle的闪回机制"}},[e._v("#")]),e._v(" 14.3.Oracle的闪回机制")]),e._v(" "),a("blockquote",[a("p",[e._v("Oracle数据库中提供一种机制可以用来查询之前一段时间内修改行原先的值，比如我们错误的提 交了修改结果，现在又想查看修改行原来的值，这时候就可以使用闪回。")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("--通过AS OF TIMESTAMP SYSDATE-5/(24*60)  回退到五分钟前\nSELECT * FROM departments AS OF TIMESTAMP SYSDATE-5/(24*60) \nWHERE department_name = 'Sales';\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])]),a("p",[e._v("查询被删除的department_name = 'Sales'并还原数据")]),e._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("--开始有数据")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("select")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("*")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("from")]),e._v(" departments "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("WHERE")]),e._v(" department_name "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'Sales'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("--删除")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("DELETE")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("FROM")]),e._v(" departments "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("WHERE")]),e._v(" department_name "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'Sales'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\nCOMMMIT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("--查询数据已经被删除")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("select")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("*")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("from")]),e._v(" departments "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("WHERE")]),e._v(" department_name "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'Sales'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("--闪回到5分钟之前，再执行下查询试试有没有结果。")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("SELECT")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("*")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("FROM")]),e._v(" departments "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("AS")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("OF")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("TIMESTAMP")]),e._v(" SYSDATE"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("5")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("24")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("*")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("60")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("WHERE")]),e._v(" department_name "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'Sales'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("--还原数据")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("insert")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("into")]),e._v(" departments \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("SELECT")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("*")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("FROM")]),e._v(" departments "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("AS")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("OF")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("TIMESTAMP")]),e._v(" SYSDATE"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("5")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("24")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("*")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("60")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("WHERE")]),e._v(" department_name "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'Sales'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br"),a("span",{staticClass:"line-number"},[e._v("16")]),a("br"),a("span",{staticClass:"line-number"},[e._v("17")]),a("br"),a("span",{staticClass:"line-number"},[e._v("18")]),a("br")])])])}),[],!1,null,null,null);s.default=n.exports}}]);