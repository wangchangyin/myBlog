(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{479:function(t,e,n){"use strict";n.r(e);var a=n(8),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"eureka、zookeeper、consul的区别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#eureka、zookeeper、consul的区别"}},[t._v("#")]),t._v(" Eureka、Zookeeper、Consul的区别")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/wangchangyin/images@main/hand/2021-06-15_163638.png",alt:"2021-06-15_163638"}})]),t._v(" "),n("h2",{attrs:{id:"_1-cap"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-cap"}},[t._v("#")]),t._v(" 1.CAP")]),t._v(" "),n("p",[t._v("C：Consistency(强一致性)，数据必须保持一致")]),t._v(" "),n("p",[t._v("A：Availability(可用性)，服务高可用")]),t._v(" "),n("p",[t._v("P：Partition tolerance (分区容错性)：多个服务分区容错性")]),t._v(" "),n("p",[t._v("比如：淘宝某个商品，双十一，肯定是满足AP高可用的，比如点赞量、访问量等数据可以不一致。")]),t._v(" "),n("p",[n("strong",[t._v("任何一个服务都只会满足上方两种，不可能同时满足上方三种")])]),t._v(" "),n("blockquote",[n("p",[t._v("最多只能同时较好的满足两个。\nCAP理论的核心是：一个分布式系统不可能同时很好的满足一致性，可用性和分区容错性这三个需求，\n因此，根据 CAP 原理将 NoSQL 数据库分成了满足 CA 原则、满足 CP 原则和满足 AP 原则三 大类：\nCA - 单点集群，满足一致性，可用性的系统，通常在可扩展性上不太强大。\nCP - 满足一致性，分区容忍必的系统，通常性能不是特别高。\nAP - 满足可用性，分区容忍性的系统，通常可能对一致性要求低一些。")])]),t._v(" "),n("p",[t._v("分布式架构比满足P，所以存在CP和AP；")]),t._v(" "),n("p",[n("strong",[t._v("Eureka满足AP")]),t._v("，高可用")]),t._v(" "),n("p",[n("strong",[t._v("Zookeeper、consul满足CP")]),t._v("，数据一致性")])])}),[],!1,null,null,null);e.default=r.exports}}]);