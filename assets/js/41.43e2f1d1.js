(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{483:function(a,s,n){"use strict";n.r(s);var e=n(8),t=Object(e.a)({},(function(){var a=this,s=a.$createElement,n=a._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[n("h1",{attrs:{id:"gateway网关"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#gateway网关"}},[a._v("#")]),a._v(" Gateway网关")]),a._v(" "),n("h2",{attrs:{id:"_1-gateway网关介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-gateway网关介绍"}},[a._v("#")]),a._v(" 1.gateway网关介绍")]),a._v(" "),n("p",[n("a",{attrs:{href:"https://cloud.spring.io/spring-cloud-static/spring-cloud-gateway/2.2.1.RELEASE/reference/html/",target:"_blank",rel:"noopener noreferrer"}},[a._v("官网"),n("OutboundLink")],1)]),a._v(" "),n("p",[a._v("Cloud全家桶中有个很重要的组件就是网关，在1.x版本中都是采用的Zuul网关；\n但在2.x版本中，zuul的升级一直跳票，SpringCloud最后自己研发了一个网关替代Zuul，\n那就是SpringCloud Gateway一句话：gateway是原zuul1.x版的替代")]),a._v(" "),n("p",[n("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/wangchangyin/images@main/hand/image-20210818185536638.png",alt:"image-20210818185536638"}})]),a._v(" "),n("p",[a._v("SpringCloud Gateway 使用的Webflux中的reactor-netty响应式编程组件，底层使用了Netty通讯框架（异步非阻塞）。")]),a._v(" "),n("h2",{attrs:{id:"_2-gateway能干嘛"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-gateway能干嘛"}},[a._v("#")]),a._v(" 2.gateway能干嘛")]),a._v(" "),n("ol",[n("li",[a._v("反向代理")]),a._v(" "),n("li",[a._v("鉴权")]),a._v(" "),n("li",[a._v("流量控制")]),a._v(" "),n("li",[a._v("熔断")]),a._v(" "),n("li",[a._v("日志监控")]),a._v(" "),n("li",[a._v("....")])]),a._v(" "),n("p",[n("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/wangchangyin/images@main/hand/image-20210818185657975.png",alt:"image-20210818185657975"}})]),a._v(" "),n("p",[a._v("前端请求通过Ngnix负载均衡到网关，网关再调用对用的微服务。")]),a._v(" "),n("h2",{attrs:{id:"_3-gateway的特性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-gateway的特性"}},[a._v("#")]),a._v(" 3.gateway的特性")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[a._v("基于Spring Framework 5, Project Reactor 和 Spring Boot 2.0 进行构建；\n")])])]),n("p",[a._v("动态路由：能够匹配任何请求属性；\n可以对路由指定 Predicate（断言）和 Filter（过滤器）；\n集成Hystrix的断路器功能；\n集成 Spring Cloud 服务发现功能；\n易于编写的 Predicate（断言）和 Filter（过滤器）；\n请求限流功能；\n支持路径重写。")]),a._v(" "),n("h2",{attrs:{id:"_4-spring-cloud-gateway-与-zuul的区别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-spring-cloud-gateway-与-zuul的区别"}},[a._v("#")]),a._v(" 4.Spring Cloud Gateway 与 Zuul的区别")]),a._v(" "),n("p",[a._v("在SpringCloud Finchley 正式版之前，Spring Cloud 推荐的网关是 Netflix 提供的Zuul：")]),a._v(" "),n("p",[a._v("1、Zuul 1.x，是一个基于"),n("strong",[a._v("阻塞")]),a._v(" I/ O 的 API Gateway")]),a._v(" "),n("p",[a._v("2、Zuul 1.x 基于Servlet 2. 5使用阻塞架构它不支持任何长连接(如 WebSocket) Zuul 的设计模式和Nginx较像，每次 I/ O 操作都是从工作线程中选择一个执行，请求线程被阻塞到工作线程完成，但是差别是Nginx 用C++ 实现，Zuul 用 Java 实现，而 JVM 本身会有第一次加载较慢的情况，使得Zuul 的性能相对较差。")]),a._v(" "),n("p",[a._v("3、Zuul 2.x理念更先进，想基于Netty非阻塞和支持长连接，但SpringCloud目前还没有整合。 Zuul 2.x的性能较 Zuul 1.x 有较大提升。在性能方面，根据官方提供的基准测试， Spring Cloud Gateway 的 RPS（每秒请求数）是Zuul 的 1. 6 倍。")]),a._v(" "),n("p",[a._v("4、Spring Cloud Gateway 建立 在 Spring Framework 5、 Project Reactor 和 Spring Boot 2 之上， 使用非阻塞 API。")]),a._v(" "),n("p",[a._v("5、Spring Cloud Gateway 还 支持 WebSocket， 并且与Spring紧密集成拥有更好的开发体验")]),a._v(" "),n("h2",{attrs:{id:"_5-gateway的三大核心"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-gateway的三大核心"}},[a._v("#")]),a._v(" 5.gateway的三大核心")]),a._v(" "),n("ol",[n("li",[a._v("路由（Route）：路由是构建网关的基本模块，它由ID，目标URI，一系列的断言和过滤器组成，如果断言为true则匹配该路由")]),a._v(" "),n("li",[a._v("断言（Predicate）：开发人员可以匹配HTTP请求中的所有内容(例如请求头或请求参数)，如果请求与断言相匹配则进行路由")]),a._v(" "),n("li",[a._v("过滤（Filter）：指的是Spring框架中GatewayFilter的实例，使用过滤器，可以在请求被路由前或者之后对请求进行修改。")])]),a._v(" "),n("p",[a._v("客户端向 Spring Cloud Gateway 发出请求。然后在 Gateway "),n("code",[a._v("Handler")]),a._v(" Mapping 中找到与请求相匹配的路由，将其发送到 Gateway Web Handler。")]),a._v(" "),n("p",[a._v("Handler 再通过指定的过滤器链来将请求发送到我们实际的服务执行业务逻辑，然后返回。\n过滤器之间用虚线分开是因为过滤器可能会在发送代理请求之前（“pre”）或之后（“post”）执行业务逻辑。")]),a._v(" "),n("p",[a._v("Filter在“pre”类型的过滤器可以做参数校验、权限校验、流量监控、日志输出、协议转换等，\n在“post”类型的过滤器中可以做响应内容、响应头的修改，日志的输出，流量监控等有着非常重要的作用。")]),a._v(" "),n("h2",{attrs:{id:"_6-整合gateway网关"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-整合gateway网关"}},[a._v("#")]),a._v(" 6.整合gateway网关")]),a._v(" "),n("h3",{attrs:{id:"_1-新建模块-cloud-gateway-gateway9527"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-新建模块-cloud-gateway-gateway9527"}},[a._v("#")]),a._v(" 1.新建模块：cloud-gateway-gateway9527")]),a._v(" "),n("h3",{attrs:{id:"_2-导入依赖"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-导入依赖"}},[a._v("#")]),a._v(" 2.导入依赖")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('<?xml version="1.0" encoding="UTF-8"?>\n<project xmlns="http://maven.apache.org/POM/4.0.0"\n         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">\n    <parent>\n        <artifactId>CloudStudy</artifactId>\n        <groupId>com.wcy.springcloud</groupId>\n        <version>1.0-SNAPSHOT</version>\n    </parent>\n    <modelVersion>4.0.0</modelVersion>\n\n    <artifactId>cloud-gateway-gateway9527</artifactId>\n\n    <dependencies>\n        \x3c!--gateway--\x3e\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-starter-gateway</artifactId>\n        </dependency>\n        \x3c!--eureka-client--\x3e\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>\n        </dependency>\n        \x3c!-- 引入自己定义的api通用包，可以使用Payment支付Entity --\x3e\n        <dependency>\n            <groupId>com.wcy.springcloud</groupId>\n            <artifactId>cloud-api-commons</artifactId>\n            <version>1.0-SNAPSHOT</version>\n        </dependency>\n        \x3c!--一般基础配置类--\x3e\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-devtools</artifactId>\n            <scope>runtime</scope>\n            <optional>true</optional>\n        </dependency>\n        <dependency>\n            <groupId>org.projectlombok</groupId>\n            <artifactId>lombok</artifactId>\n            <optional>true</optional>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-test</artifactId>\n            <scope>test</scope>\n        </dependency>\n    </dependencies>\n</project>\n')])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br"),n("span",{staticClass:"line-number"},[a._v("12")]),n("br"),n("span",{staticClass:"line-number"},[a._v("13")]),n("br"),n("span",{staticClass:"line-number"},[a._v("14")]),n("br"),n("span",{staticClass:"line-number"},[a._v("15")]),n("br"),n("span",{staticClass:"line-number"},[a._v("16")]),n("br"),n("span",{staticClass:"line-number"},[a._v("17")]),n("br"),n("span",{staticClass:"line-number"},[a._v("18")]),n("br"),n("span",{staticClass:"line-number"},[a._v("19")]),n("br"),n("span",{staticClass:"line-number"},[a._v("20")]),n("br"),n("span",{staticClass:"line-number"},[a._v("21")]),n("br"),n("span",{staticClass:"line-number"},[a._v("22")]),n("br"),n("span",{staticClass:"line-number"},[a._v("23")]),n("br"),n("span",{staticClass:"line-number"},[a._v("24")]),n("br"),n("span",{staticClass:"line-number"},[a._v("25")]),n("br"),n("span",{staticClass:"line-number"},[a._v("26")]),n("br"),n("span",{staticClass:"line-number"},[a._v("27")]),n("br"),n("span",{staticClass:"line-number"},[a._v("28")]),n("br"),n("span",{staticClass:"line-number"},[a._v("29")]),n("br"),n("span",{staticClass:"line-number"},[a._v("30")]),n("br"),n("span",{staticClass:"line-number"},[a._v("31")]),n("br"),n("span",{staticClass:"line-number"},[a._v("32")]),n("br"),n("span",{staticClass:"line-number"},[a._v("33")]),n("br"),n("span",{staticClass:"line-number"},[a._v("34")]),n("br"),n("span",{staticClass:"line-number"},[a._v("35")]),n("br"),n("span",{staticClass:"line-number"},[a._v("36")]),n("br"),n("span",{staticClass:"line-number"},[a._v("37")]),n("br"),n("span",{staticClass:"line-number"},[a._v("38")]),n("br"),n("span",{staticClass:"line-number"},[a._v("39")]),n("br"),n("span",{staticClass:"line-number"},[a._v("40")]),n("br"),n("span",{staticClass:"line-number"},[a._v("41")]),n("br"),n("span",{staticClass:"line-number"},[a._v("42")]),n("br"),n("span",{staticClass:"line-number"},[a._v("43")]),n("br"),n("span",{staticClass:"line-number"},[a._v("44")]),n("br"),n("span",{staticClass:"line-number"},[a._v("45")]),n("br"),n("span",{staticClass:"line-number"},[a._v("46")]),n("br"),n("span",{staticClass:"line-number"},[a._v("47")]),n("br"),n("span",{staticClass:"line-number"},[a._v("48")]),n("br"),n("span",{staticClass:"line-number"},[a._v("49")]),n("br")])]),n("h3",{attrs:{id:"_3-添加yml"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-添加yml"}},[a._v("#")]),a._v(" 3.添加yml")]),a._v(" "),n("p",[a._v("访问:http://localhost:8001/payment/1可以通过网关http://localhost:9527/payment/1访问")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("\nserver:\n  port: 9527\n\nspring:\n  application:\n    name: cloud-gateway\n  cloud:\n    gateway:\n      routes:\n        - id: payment_routh #payment_route    #路由的ID，没有固定规则但要求唯一，建议配合服务名\n          uri: http://localhost:8001          #匹配后提供服务的路由地址\n          predicates:\n            - Path=/payment/**         # 断言，路径相匹配的进行路由\n\n        - id: payment_routh2 #payment_route    #路由的ID，没有固定规则但要求唯一，建议配合服务名\n          uri: http://localhost:8002          #匹配后提供服务的路由地址\n          predicates:\n            - Path=/payment/**         # 断言，路径相匹配的进行路由\n\neureka:\n  instance:\n    hostname: cloud-gateway-service\n  client: #服务提供者provider注册进eureka服务列表内\n    service-url:\n      register-with-eureka: true\n      fetch-registry: true\n      defaultZone: http://eureka7001.com:7001/eureka,http://eureka7002.com:7002/eureka  # 集群版\n\n\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br"),n("span",{staticClass:"line-number"},[a._v("12")]),n("br"),n("span",{staticClass:"line-number"},[a._v("13")]),n("br"),n("span",{staticClass:"line-number"},[a._v("14")]),n("br"),n("span",{staticClass:"line-number"},[a._v("15")]),n("br"),n("span",{staticClass:"line-number"},[a._v("16")]),n("br"),n("span",{staticClass:"line-number"},[a._v("17")]),n("br"),n("span",{staticClass:"line-number"},[a._v("18")]),n("br"),n("span",{staticClass:"line-number"},[a._v("19")]),n("br"),n("span",{staticClass:"line-number"},[a._v("20")]),n("br"),n("span",{staticClass:"line-number"},[a._v("21")]),n("br"),n("span",{staticClass:"line-number"},[a._v("22")]),n("br"),n("span",{staticClass:"line-number"},[a._v("23")]),n("br"),n("span",{staticClass:"line-number"},[a._v("24")]),n("br"),n("span",{staticClass:"line-number"},[a._v("25")]),n("br"),n("span",{staticClass:"line-number"},[a._v("26")]),n("br"),n("span",{staticClass:"line-number"},[a._v("27")]),n("br"),n("span",{staticClass:"line-number"},[a._v("28")]),n("br"),n("span",{staticClass:"line-number"},[a._v("29")]),n("br"),n("span",{staticClass:"line-number"},[a._v("30")]),n("br")])]),n("h3",{attrs:{id:"_4-主启动类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-主启动类"}},[a._v("#")]),a._v(" 4.主启动类")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("package com.wcy.springcloud;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.cloud.netflix.eureka.EnableEurekaClient;\n\n@SpringBootApplication\n@EnableEurekaClient\npublic class GateWayMain9527 {\n    public static void main(String[] args) {\n        SpringApplication.run(GateWayMain9527.class,args);\n    }\n}\n\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br"),n("span",{staticClass:"line-number"},[a._v("12")]),n("br"),n("span",{staticClass:"line-number"},[a._v("13")]),n("br"),n("span",{staticClass:"line-number"},[a._v("14")]),n("br")])]),n("h2",{attrs:{id:"_7-配置路由规则"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7-配置路由规则"}},[a._v("#")]),a._v(" 7.配置路由规则")]),a._v(" "),n("h3",{attrs:{id:"_1-yml文件的方式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-yml文件的方式"}},[a._v("#")]),a._v(" 1.yml文件的方式")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("spring:\n  application:\n    name: cloud-gateway\n  cloud:\n    gateway:\n      routes:\n        - id: payment_routh #payment_route    #路由的ID，没有固定规则但要求唯一，建议配合服务名\n          uri: http://localhost:8001          #匹配后提供服务的路由地址\n          predicates:\n            - Path=/payment/**         # 断言，路径相匹配的进行路由\n\n        - id: payment_routh2 #payment_route    #路由的ID，没有固定规则但要求唯一，建议配合服务名\n          uri: http://localhost:8002          #匹配后提供服务的路由地址\n          predicates:\n            - Path=/payment/**         # 断言，路径相匹配的进行路由\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br"),n("span",{staticClass:"line-number"},[a._v("12")]),n("br"),n("span",{staticClass:"line-number"},[a._v("13")]),n("br"),n("span",{staticClass:"line-number"},[a._v("14")]),n("br"),n("span",{staticClass:"line-number"},[a._v("15")]),n("br")])]),n("h3",{attrs:{id:"_2-java的方式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-java的方式"}},[a._v("#")]),a._v(" 2.java的方式")]),a._v(" "),n("p",[a._v("访问http://localhost:9527/guonei会访问http://news.baidu.com/guonei")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('package com.wcy.springcloud.config;\n\nimport org.springframework.cloud.gateway.route.Route;\nimport org.springframework.cloud.gateway.route.RouteLocator;\nimport org.springframework.cloud.gateway.route.builder.PredicateSpec;\nimport org.springframework.cloud.gateway.route.builder.RouteLocatorBuilder;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\n\nimport java.util.function.Function;\n\n@Configuration\npublic class GateWayConfig {\n    /**\n     * 配置了一个id为route-name的路由规则，\n     * 当访问地址 http://localhost:9527/guonei时会自动转发到地址：http://news.baidu.com/guonei\n     * @return\n     */\n    @Bean\n    public RouteLocator customRouteLocator1(RouteLocatorBuilder builder){\n        RouteLocatorBuilder.Builder routes = builder.routes();\n        routes.route("path_route_wcy", new Function<PredicateSpec, Route.AsyncBuilder>() {\n            @Override\n            public Route.AsyncBuilder apply(PredicateSpec predicateSpec) {\n                return predicateSpec.path("/guonei").uri("http://news.baidu.com/guonei");\n            }\n        }).build();\n        return routes.build();\n    }\n}\n')])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br"),n("span",{staticClass:"line-number"},[a._v("12")]),n("br"),n("span",{staticClass:"line-number"},[a._v("13")]),n("br"),n("span",{staticClass:"line-number"},[a._v("14")]),n("br"),n("span",{staticClass:"line-number"},[a._v("15")]),n("br"),n("span",{staticClass:"line-number"},[a._v("16")]),n("br"),n("span",{staticClass:"line-number"},[a._v("17")]),n("br"),n("span",{staticClass:"line-number"},[a._v("18")]),n("br"),n("span",{staticClass:"line-number"},[a._v("19")]),n("br"),n("span",{staticClass:"line-number"},[a._v("20")]),n("br"),n("span",{staticClass:"line-number"},[a._v("21")]),n("br"),n("span",{staticClass:"line-number"},[a._v("22")]),n("br"),n("span",{staticClass:"line-number"},[a._v("23")]),n("br"),n("span",{staticClass:"line-number"},[a._v("24")]),n("br"),n("span",{staticClass:"line-number"},[a._v("25")]),n("br"),n("span",{staticClass:"line-number"},[a._v("26")]),n("br"),n("span",{staticClass:"line-number"},[a._v("27")]),n("br"),n("span",{staticClass:"line-number"},[a._v("28")]),n("br"),n("span",{staticClass:"line-number"},[a._v("29")]),n("br"),n("span",{staticClass:"line-number"},[a._v("30")]),n("br")])]),n("h2",{attrs:{id:"_8-gateway实现负载均衡"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_8-gateway实现负载均衡"}},[a._v("#")]),a._v(" 8.gateway实现负载均衡")]),a._v(" "),n("p",[a._v("以前80通过Feigin接口+Ribbon实现负载均衡；")]),a._v(" "),n("p",[a._v("现在通过网关实现负载均衡；")]),a._v(" "),n("p",[n("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/wangchangyin/images@main/hand/image-20210820113619983.png",alt:"image-20210820113619983"}})]),a._v(" "),n("p",[a._v("默认情况下Gateway会根据注册中心注册的服务列表，\n以注册中心上微服务名为路径创建动态路由进行转发，从而实现动态路由的功能")]),a._v(" "),n("p",[a._v("修改yml文件：")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("\nserver:\n  port: 9527\n\nspring:\n  application:\n    name: cloud-gateway\n  cloud:\n    gateway:\n      discovery:\n        locator:\n          enabled: true #开启从注册中心动态创建路由的功能，利用微服务名进行路由\n      routes:\n        - id: payment_routh #payment_route    #路由的ID，没有固定规则但要求唯一，建议配合服务名\n#          uri: http://localhost:8001          #匹配后提供服务的路由地址\n          uri: lb://cloud-payment-service #匹配后提供服务的路由地址\n          predicates:\n            - Path=/payment/**         # 断言，路径相匹配的进行路由\n\n        - id: payment_routh2 #payment_route    #路由的ID，没有固定规则但要求唯一，建议配合服务名\n#          uri: http://localhost:8002          #匹配后提供服务的路由地址\n          uri: lb://cloud-payment-service #匹配后提供服务的路由地址\n          predicates:\n            - Path=/payment/feign/**         # 断言，路径相匹配的进行路由\n\neureka:\n  instance:\n    hostname: cloud-gateway-service\n  client: #服务提供者provider注册进eureka服务列表内\n    service-url:\n      register-with-eureka: true\n      fetch-registry: true\n      defaultZone: http://eureka7001.com:7001/eureka,http://eureka7002.com:7002/eureka  # 集群版\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br"),n("span",{staticClass:"line-number"},[a._v("12")]),n("br"),n("span",{staticClass:"line-number"},[a._v("13")]),n("br"),n("span",{staticClass:"line-number"},[a._v("14")]),n("br"),n("span",{staticClass:"line-number"},[a._v("15")]),n("br"),n("span",{staticClass:"line-number"},[a._v("16")]),n("br"),n("span",{staticClass:"line-number"},[a._v("17")]),n("br"),n("span",{staticClass:"line-number"},[a._v("18")]),n("br"),n("span",{staticClass:"line-number"},[a._v("19")]),n("br"),n("span",{staticClass:"line-number"},[a._v("20")]),n("br"),n("span",{staticClass:"line-number"},[a._v("21")]),n("br"),n("span",{staticClass:"line-number"},[a._v("22")]),n("br"),n("span",{staticClass:"line-number"},[a._v("23")]),n("br"),n("span",{staticClass:"line-number"},[a._v("24")]),n("br"),n("span",{staticClass:"line-number"},[a._v("25")]),n("br"),n("span",{staticClass:"line-number"},[a._v("26")]),n("br"),n("span",{staticClass:"line-number"},[a._v("27")]),n("br"),n("span",{staticClass:"line-number"},[a._v("28")]),n("br"),n("span",{staticClass:"line-number"},[a._v("29")]),n("br"),n("span",{staticClass:"line-number"},[a._v("30")]),n("br"),n("span",{staticClass:"line-number"},[a._v("31")]),n("br"),n("span",{staticClass:"line-number"},[a._v("32")]),n("br"),n("span",{staticClass:"line-number"},[a._v("33")]),n("br")])]),n("h2",{attrs:{id:"_9-predicate断言的使用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_9-predicate断言的使用"}},[a._v("#")]),a._v(" 9.Predicate断言的使用")]),a._v(" "),n("ol",[n("li",[n("p",[a._v("After Route Predicate：多少时间之后才可以访问")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("spring:\n  application:\n    name: cloud-gateway\n  cloud:\n    gateway:\n      discovery:\n        locator:\n          enabled: true #开启从注册中心动态创建路由的功能，利用微服务名进行路由\n      routes:\n        - id: payment_routh #payment_route    #路由的ID，没有固定规则但要求唯一，建议配合服务名\n#          uri: http://localhost:8001          #匹配后提供服务的路由地址\n          uri: lb://cloud-payment-service #匹配后提供服务的路由地址\n          predicates:\n            - Path=/payment/**         # 断言，路径相匹配的进行路由\n            - After=2021-08-20T15:00:03.685+08:00[Asia/Shanghai]         # 断言，路径相匹配的进行路由\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br"),n("span",{staticClass:"line-number"},[a._v("12")]),n("br"),n("span",{staticClass:"line-number"},[a._v("13")]),n("br"),n("span",{staticClass:"line-number"},[a._v("14")]),n("br"),n("span",{staticClass:"line-number"},[a._v("15")]),n("br")])]),n("p",[a._v("时区可以通过jdk获取")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('    public static void main(String[] args)\n    {\n        ZonedDateTime zbj = ZonedDateTime.now(); // 默认时区\n        System.out.println(zbj);\n//        ZonedDateTime zny = ZonedDateTime.now(ZoneId.of("America/New_York")); // 用指定时区获取当前时间\n//        System.out.println(zny);\n    }\n')])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br")])])]),a._v(" "),n("li",[n("p",[a._v("Before Route Predicate：多少时间之前才能访问")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("-Before=2020-02-05T15:10:03.685+08:00[Asia/Shanghai]         # 断言，路径相匹配的进行路由\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br")])])]),a._v(" "),n("li",[n("p",[a._v("Between Route Predicate：时间之间")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("- Between=2020-02-02T17:45:06.206+08:00[Asia/Shanghai],2020-03-25T18:59:06.206+08:00[Asia/Shanghai]\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br")])])]),a._v(" "),n("li",[n("p",[a._v("Cookie Route Predicate：必须携带某个cookie，value支持正则表达式")]),a._v(" "),n("p",[a._v("key，value的形式")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("- Cookie=username,zzyy\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br")])])]),a._v(" "),n("li",[n("p",[a._v("Header Route Predicate：头信息必须携带")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("- Header=X-Request-Id, \\d+  # 请求头要有X-Request-Id属性并且值为整数的正则表达式\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br")])])]),a._v(" "),n("li",[n("p",[a._v("Host Route Predicate：必须是某主机")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("- Host=**.atguigu.com\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br")])])]),a._v(" "),n("li",[n("p",[a._v("Method Route Predicate：允许get、post方式请求")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("- Method=GET\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br")])])]),a._v(" "),n("li",[n("p",[a._v("Path Route Predicate：有该路径匹配")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("- Path=/payment/lb/**         # 断言，路径相匹配的进行路由\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br")])])]),a._v(" "),n("li",[n("p",[a._v("Query Route Predicate：帶某参数才可以访问")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("- Query=username, \\d+  # 要有参数名username并且值还要是整数才能路由\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br")])])])]),a._v(" "),n("p",[a._v("说白了，Predicate就是为了实现一组匹配规则，让请求过来找到对应的Route进行处理。")]),a._v(" "),n("h2",{attrs:{id:"_10-filter的使用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_10-filter的使用"}},[a._v("#")]),a._v(" 10.Filter的使用")]),a._v(" "),n("h3",{attrs:{id:"_1-spring-cloud-gateway的filter生命周期"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-spring-cloud-gateway的filter生命周期"}},[a._v("#")]),a._v(" 1.Spring Cloud Gateway的Filter生命周期")]),a._v(" "),n("p",[a._v("​\t处理之前")]),a._v(" "),n("p",[a._v("​\t处理之后")]),a._v(" "),n("h3",{attrs:{id:"_2-spring-cloud-gateway的filter种类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-spring-cloud-gateway的filter种类"}},[a._v("#")]),a._v(" 2.Spring Cloud Gateway的Filter种类")]),a._v(" "),n("p",[a._v("GatewayFilter ：有31种，可以参考：https://cloud.spring.io/spring-cloud-static/spring-cloud-gateway/2.2.1.RELEASE/reference/html/#the-addrequestparameter-gatewayfilter-factory")]),a._v(" "),n("p",[a._v("GlobalFilter：全局过滤器")]),a._v(" "),n("p",[n("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/wangchangyin/images@main/hand/image-20210820152005470.png",alt:"image-20210820152005470"}})]),a._v(" "),n("h3",{attrs:{id:"_3-常用的过滤器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-常用的过滤器"}},[a._v("#")]),a._v(" 3.常用的过滤器")]),a._v(" "),n("p",[a._v("AddRequestParameter：可以对请求增加参数")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("spring:\n  application:\n    name: cloud-gateway\n  cloud:\n    gateway:\n      discovery:\n        locator:\n          enabled: true #开启从注册中心动态创建路由的功能，利用微服务名进行路由\n      routes:\n        - id: payment_routh #payment_route    #路由的ID，没有固定规则但要求唯一，建议配合服务名\n#          uri: http://localhost:8001          #匹配后提供服务的路由地址\n          uri: lb://cloud-payment-service #匹配后提供服务的路由地址\n          filters:\n            - AddRequestParameter=X-Request-Id,1024 #过滤器工厂会在匹配的请求头加上一对请求头，名称为X-Request-Id值为1024\n          predicates:\n            - Path=/payment/**         # 断言，路径相匹配的进行路由\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br"),n("span",{staticClass:"line-number"},[a._v("12")]),n("br"),n("span",{staticClass:"line-number"},[a._v("13")]),n("br"),n("span",{staticClass:"line-number"},[a._v("14")]),n("br"),n("span",{staticClass:"line-number"},[a._v("15")]),n("br"),n("span",{staticClass:"line-number"},[a._v("16")]),n("br")])]),n("h3",{attrs:{id:"_4-自定义全局过滤器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-自定义全局过滤器"}},[a._v("#")]),a._v(" 4.自定义全局过滤器")]),a._v(" "),n("p",[a._v("自定义过滤器实现GlobalFilter, Ordered接口即可，记得注解@Component")]),a._v(" "),n("p",[a._v("下面过滤器实现了只允许传入参数为wcy的才会放行，其他都被过滤掉。")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('package com.wcy.springcloud.filter;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.cloud.gateway.filter.GatewayFilterChain;\nimport org.springframework.cloud.gateway.filter.GlobalFilter;\nimport org.springframework.core.Ordered;\nimport org.springframework.http.HttpStatus;\nimport org.springframework.stereotype.Component;\nimport org.springframework.web.server.ServerWebExchange;\nimport reactor.core.publisher.Mono;\n\nimport java.util.Date;\n\n/**\n * 自定义过滤器\n * 记录日志\n * 鉴权\n * 。。。。\n */\n@Component\npublic class MyLogGateWayFilter implements GlobalFilter, Ordered {\n    private static Logger logger = LoggerFactory.getLogger(MyLogGateWayFilter.class);\n\n    @Override\n    public Mono<Void> filter(ServerWebExchange exchange, GatewayFilterChain chain) {\n        logger.info("time:"+new Date()+"\\t 执行了自定义的全局过滤器: "+"MyLogGateWayFilter"+"hello");\n        String uname = exchange.getRequest().getQueryParams().getFirst("uname");\n        if(!"wcy".equals(uname)){\n            //设置状态 并返回\n            logger.info("被拦截");\n            exchange.getResponse().setStatusCode(HttpStatus.NOT_ACCEPTABLE);\n            return exchange.getResponse().setComplete();\n        }\n        //放行\n        return chain.filter(exchange);\n    }\n\n    /**\n     * 返回值越小该过滤器优先级越高\n     * @return\n     */\n    @Override\n    public int getOrder() {\n        return 0;\n    }\n}\n')])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br"),n("span",{staticClass:"line-number"},[a._v("12")]),n("br"),n("span",{staticClass:"line-number"},[a._v("13")]),n("br"),n("span",{staticClass:"line-number"},[a._v("14")]),n("br"),n("span",{staticClass:"line-number"},[a._v("15")]),n("br"),n("span",{staticClass:"line-number"},[a._v("16")]),n("br"),n("span",{staticClass:"line-number"},[a._v("17")]),n("br"),n("span",{staticClass:"line-number"},[a._v("18")]),n("br"),n("span",{staticClass:"line-number"},[a._v("19")]),n("br"),n("span",{staticClass:"line-number"},[a._v("20")]),n("br"),n("span",{staticClass:"line-number"},[a._v("21")]),n("br"),n("span",{staticClass:"line-number"},[a._v("22")]),n("br"),n("span",{staticClass:"line-number"},[a._v("23")]),n("br"),n("span",{staticClass:"line-number"},[a._v("24")]),n("br"),n("span",{staticClass:"line-number"},[a._v("25")]),n("br"),n("span",{staticClass:"line-number"},[a._v("26")]),n("br"),n("span",{staticClass:"line-number"},[a._v("27")]),n("br"),n("span",{staticClass:"line-number"},[a._v("28")]),n("br"),n("span",{staticClass:"line-number"},[a._v("29")]),n("br"),n("span",{staticClass:"line-number"},[a._v("30")]),n("br"),n("span",{staticClass:"line-number"},[a._v("31")]),n("br"),n("span",{staticClass:"line-number"},[a._v("32")]),n("br"),n("span",{staticClass:"line-number"},[a._v("33")]),n("br"),n("span",{staticClass:"line-number"},[a._v("34")]),n("br"),n("span",{staticClass:"line-number"},[a._v("35")]),n("br"),n("span",{staticClass:"line-number"},[a._v("36")]),n("br"),n("span",{staticClass:"line-number"},[a._v("37")]),n("br"),n("span",{staticClass:"line-number"},[a._v("38")]),n("br"),n("span",{staticClass:"line-number"},[a._v("39")]),n("br"),n("span",{staticClass:"line-number"},[a._v("40")]),n("br"),n("span",{staticClass:"line-number"},[a._v("41")]),n("br"),n("span",{staticClass:"line-number"},[a._v("42")]),n("br"),n("span",{staticClass:"line-number"},[a._v("43")]),n("br"),n("span",{staticClass:"line-number"},[a._v("44")]),n("br"),n("span",{staticClass:"line-number"},[a._v("45")]),n("br"),n("span",{staticClass:"line-number"},[a._v("46")]),n("br"),n("span",{staticClass:"line-number"},[a._v("47")]),n("br")])])])}),[],!1,null,null,null);s.default=t.exports}}]);