(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{509:function(s,a,t){"use strict";t.r(a);var n=t(8),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"排序-选择排序-selection-sort"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#排序-选择排序-selection-sort"}},[s._v("#")]),s._v(" 排序 - 选择排序(Selection sort)")]),s._v(" "),t("h2",{attrs:{id:"选择排序介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#选择排序介绍"}},[s._v("#")]),s._v(" 选择排序介绍")]),s._v(" "),t("p",[s._v("它的基本思想是: 首先在未排序的数列中找到最小(or最大)元素，然后将其存放到数列的起始位置；接着，再从剩余未排序的元素中继续寻找最小(or最大)元素，然后放到已排序序列的末尾。以此类推，直到所有元素均排序完毕。")]),s._v(" "),t("h2",{attrs:{id:"选择排序实现"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#选择排序实现"}},[s._v("#")]),s._v(" 选择排序实现")]),s._v(" "),t("p",[s._v("下面以数列{20,40,30,10,60,50}为例，演示它的选择排序过程(如下图)。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/wcy_dch/images/raw/master/img/alg-sort-select-1.jpg",alt:"img"}})]),s._v(" "),t("p",[s._v("排序流程")]),s._v(" "),t("ul",[t("li",[s._v("第1趟: i=0。找出a[1...5]中的最小值a[3]=10，然后将a[0]和a[3]互换。 数列变化: 20,40,30,10,60,50 -- > 10,40,30,20,60,50")]),s._v(" "),t("li",[s._v("第2趟: i=1。找出a[2...5]中的最小值a[3]=20，然后将a[1]和a[3]互换。 数列变化: 10,40,30,20,60,50 -- > 10,20,30,40,60,50")]),s._v(" "),t("li",[s._v("第3趟: i=2。找出a[3...5]中的最小值，由于该最小值大于a[2]，该趟不做任何处理。")]),s._v(" "),t("li",[s._v("第4趟: i=3。找出a[4...5]中的最小值，由于该最小值大于a[3]，该趟不做任何处理。")]),s._v(" "),t("li",[s._v("第5趟: i=4。交换a[4]和a[5]的数据。 数列变化: 10,20,30,40,60,50 -- > 10,20,30,40,50,60")])]),s._v(" "),t("h2",{attrs:{id:"选择排序的时间复杂度和稳定性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#选择排序的时间复杂度和稳定性"}},[s._v("#")]),s._v(" 选择排序的时间复杂度和稳定性")]),s._v(" "),t("h3",{attrs:{id:"选择排序时间复杂度"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#选择排序时间复杂度"}},[s._v("#")]),s._v(" 选择排序时间复杂度")]),s._v(" "),t("p",[s._v("选择排序的时间复杂度是O(N2)。")]),s._v(" "),t("p",[s._v("假设被排序的数列中有N个数。遍历一趟的时间复杂度是O(N)，需要遍历多少次呢? N-1！因此，选择排序的时间复杂度是O(N2)。")]),s._v(" "),t("h3",{attrs:{id:"选择排序稳定性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#选择排序稳定性"}},[s._v("#")]),s._v(" 选择排序稳定性")]),s._v(" "),t("p",[s._v("选择排序是稳定的算法，它满足稳定算法的定义。")]),s._v(" "),t("p",[t("code",[s._v("算法稳定性")]),s._v(" -- 假设在数列中存在a[i]=a[j]，若在排序之前，a[i]在a[j]前面；并且排序之后，a[i]仍然在a[j]前面。则这个排序算法是稳定的！")]),s._v(" "),t("h2",{attrs:{id:"代码实现"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#代码实现"}},[s._v("#")]),s._v(" 代码实现")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("public static int[] selectSort(int[] nums){\n    for (int i = 0; i <nums.length ; i++) {\n        int temp=i;\n        for (int j = i+1; j < nums.length; j++) {\n            if(nums[j] > nums[temp]){\n                temp=j;\n            }\n        }\n        //交换\n        if(temp != i){//不需要中间值交换顺序\n            nums[i]=nums[i]+nums[temp];\n            nums[temp]=nums[i]-nums[temp];\n            nums[i]=nums[i]-nums[temp];\n        }\n    }\n    return nums;\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br")])]),t("h2",{attrs:{id:"参考文章"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[s._v("#")]),s._v(" 参考文章")]),s._v(" "),t("ul",[t("li",[s._v("https://www.pdai.tech/md/algorithm/alg-sort-x-select.html")])])])}),[],!1,null,null,null);a.default=e.exports}}]);